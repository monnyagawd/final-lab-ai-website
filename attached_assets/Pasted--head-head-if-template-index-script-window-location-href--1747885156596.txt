  <head>
    <head>
    {% if template == 'index' %}
      <script>
        window.location.href = '/collections/all';
      </script>
    {% endif %}
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <meta name="theme-color" content="black">
    <link rel="canonical" href="{{ canonical_url }}">
    <link rel="preconnect" href="https://cdn.shopify.com" crossorigin>

    {%- if settings.favicon != blank -%}
      <link rel="icon" type="image/png" href="{{ settings.favicon | image_url: width: 32, height: 32 }}">
    {%- endif -%}

    {%- unless settings.type_header_font.system? and settings.type_body_font.system? -%}
      <link rel="preconnect" href="https://fonts.shopifycdn.com" crossorigin>
    {%- endunless -%}

    <title>
      {{ page_title }}
      {%- if current_tags %} &ndash; tagged "{{ current_tags | join: ', ' }}"{% endif -%}
      {%- if current_page != 1 %} &ndash; Page {{ current_page }}{% endif -%}
      {%- unless page_title contains shop.name %} &ndash; {{ shop.name }}{% endunless -%}
    </title>

    {% if page_description %}
      <meta name="description" content="{{ page_description | escape }}">
    {% endif %}

    {% render 'meta-tags' %}

    <script src="{{ 'constants.js' | asset_url }}" defer="defer"></script>
    <script src="{{ 'pubsub.js' | asset_url }}" defer="defer"></script>
    <script src="{{ 'global.js' | asset_url }}" defer="defer"></script>
    {{ content_for_header }}

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/swiper@9/swiper-bundle.min.css" media="print" onload="this.media='all'">
<script src="https://cdn.jsdelivr.net/npm/swiper@9/swiper-bundle.min.js" defer="defer">
</script>
      
    {%- liquid
      assign body_font_bold = settings.type_body_font | font_modify: 'weight', 'bold'
      assign body_font_italic = settings.type_body_font | font_modify: 'style', 'italic'
      assign body_font_bold_italic = body_font_bold | font_modify: 'style', 'italic'
    %}
    
    {% style %}
      {{ settings.type_body_font | font_face: font_display: 'swap' }}
      {{ body_font_bold | font_face: font_display: 'swap' }}
      {{ body_font_italic | font_face: font_display: 'swap' }}
      {{ body_font_bold_italic | font_face: font_display: 'swap' }}
      {{ settings.type_header_font | font_face: font_display: 'swap' }}

      /* Your existing root variables */
      :root {
        --font-body-family: {{ settings.type_body_font.family }}, {{ settings.type_body_font.fallback_families }};
        --font-body-style: {{ settings.type_body_font.style }};
        --font-body-weight: {{ settings.type_body_font.weight }};
        --font-body-weight-bold: {{ settings.type_body_font.weight | plus: 300 | at_most: 1000 }};

        --font-heading-family: {{ settings.type_header_font.family }}, {{ settings.type_header_font.fallback_families }};
        --font-heading-style: {{ settings.type_header_font.style }};
        --font-heading-weight: {{ settings.type_header_font.weight }};

        /* New Represent-style Components */
        --menu-transition: all 0.3s ease;
        --menu-background: {{ settings.custom_menu_drawer_bg }};
        --menu-text-color: {{ settings.header_menu_mobile_text_color }};
      }

    {
max-width: 100%;
box-sizing: border-box;
}

body {
  overflow-x: hidden;
  width: 100%;
  position: relative;
}

.cart-icon {
  min-width: auto !important;
}
      
      /* Background Image System */
      .fullscreen-background {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100vh;
        z-index: -1;
        background-size: cover;
        background-position: center;
        transition: opacity 0.5s ease;
      }

      /* Left Navigation Styles */
      .represent-nav {
        position: fixed;
        top: 30px;
        left: 30px;
        z-index: 1000;
      }

      .represent-nav-toggle {
        background: none;
        border: none;
        padding: 15px;
        cursor: pointer;
        display: flex;
        flex-direction: column;
        gap: 6px;
      }

      .toggle-line {
        width: 24px;
        height: 2px;
        background-color: {{ settings.site_text_color }};
        transition: var(--menu-transition);
      }




/* Header Layout Styles */
.header-layout {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 20px 40px;
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  z-index: 1000;
  width: 100%;
  height: 80px;
  box-sizing: border-box;
  background: transparent;
  color: white;
}

button.cart-link,
button#cart-icon-bubble {
  background: transparent !important;
  border: none !important
}

.represent-nav {
  min-width: 250px;
  display: flex;
  justify-content: flex-start;
  align-items: center;
}

.nav-items {
  display: flex;
  gap: 30px;
  align-items: center;
}

.represent-nav-item {
  position: relative;
}

.nav-link {
  color: var(--menu-text-color);
  text-decoration: none;
  font-size: 1.2rem;
  text-transform: uppercase;
  letter-spacing: 1px;
}

.site-logo {
  position: absolute;
  left: 50%;
  transform: translateX(-50%);
  display: flex;
  align-items: center;
}

.site-logo h1 {
  margin: 0;
  font-size: 2rem;
  text-transform: uppercase;
  letter-spacing: 2px;
  white-space: nowrap;
}

.cart-icon {
  min-width: auto;
  display: flex;
  justify-content: flex-end;
  align-items: center;
  margin-left: auto;
}

.cart-icon a {
  display: flex;
  align-items: center;
}

.cart-icon svg {
  width: 24px;
  height: 24px;
  color: white;
}

.menu-backdrop {
  display: none;
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(0, 0, 0, 0.3); 
  backdrop-filter: blur(5px); 
  -webkit-backdrop-filter: blur(5px); 
  z-index: 999; 
  opacity: 0;
  transition: opacity 0.3s ease;
}

.represent-nav-item:hover ~ .menu-backdrop {
  display: block;
  opacity: 1;
}


.represent-nav-menu {
  position: absolute;
  top: 100%;
  left: 0;
  background: var(--menu-background);
  min-width: 600px;
  height: calc(100vh - 80px);
  padding: 0;
  opacity: 0;
  visibility: hidden;
  transform: translateY(-10px);
  transition: var(--menu-transition);
  z-index: 1000;
}

.represent-nav-item::before {
  content: '';
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100vh;
  background: rgba(0, 0, 0, 0.3);
  backdrop-filter: blur(5px);
  -webkit-backdrop-filter: blur(5px);
  opacity: 0;
  visibility: hidden;
  transition: var(--menu-transition);
  z-index: 998;
  pointer-events: none;
}

.menu-content {
  display: flex;
  justify-content: space-between;
  align-items: stretch;
  gap: 0px;
  height: 100%;
  width: 100%;
}
      
.represent-nav-item:hover .represent-nav-menu {
  opacity: 1;
  visibility: visible;
  transform: translateY(0);
}

.represent-nav-item:hover::before {
  opacity: 1;
  visibility: visible;
}

.represent-nav-menu ul {
  list-style: none;
  padding: 30px;
  margin: 0;
  flex: 1;
  color: black;
}

.represent-nav-menu li {
  margin: 20px 0;
}
      
.represent-nav-menu a {
  min-width: 220px;
  text-decoration: none !important;
}

.represent-nav-menu li {
  margin: 15px 0 !important;
  padding-left: 20px !important;
}

.represent-nav-menu li:first-child {
  margin-bottom: 12px !important;
  font-weight: bold !important;
  padding-left: 0 !important;
  font-size: 50px !important;
}

.represent-nav-menu li:not(:first-child) {
  padding-left: 12px !important;
  font-size: 40px !important;
}

@media screen and (max-width: 768px) {
  .represent-nav-menu a {
    min-width: 220px;
  }

  .represent-nav-menu li:first-child {
    margin-bottom: 12px !important;
    font-weight: bold !important;
    font-size: 16px !important;
  }

  .represent-nav-menu li:not(:first-child) {
    padding-left: 12px !important;
    font-size: 32px !important;
  }
}

.explore-menu {
  min-width: 200px !important;
  height: auto !important;
}

.explore-menu .menu-content {
  display: block !important;
}

.explore-menu ul {
  padding: 20px !important;
  margin: 0 !important;
  width: 100% !important;
  box-sizing: border-box !important;
}

.explore-menu li {
  margin: 15px 0 !important;
  font-size: 0.9rem !important;
  padding-left: 20px !important; 
}

/* Style for Lookbook and Contact Us */
.explore-menu li:first-child,
.explore-menu li:nth-child(3) {
  font-size: 1.5rem !important;
  font-weight: bold !important;
  padding-left: 0 !important;
  text-align: left !important;
  text-indent: 0 !important;
  position: relative !important;
  left: 0 !important;
}

/* Style for items under Lookbook and Contact Us */
.explore-menu li:not(:first-child):not(:nth-child(3)) {
  font-size: 0.9rem !important;
  padding-left: 20px !important;
  font-weight: normal !important;
}

.explore-menu li:last-child {
  margin-bottom: 0 !important;
}

.explore-menu li a {
  color: black !important;
  text-decoration: none !important;
  font-weight: normal !important;
}

/* Mobile adjustments */
@media screen and (max-width: 768px) {
  .explore-menu {
    min-width: 150px !important;
  }
  
  .explore-menu ul {
    padding: 15px !important;
  }

  .explore-menu li {
    margin: 10px 0 !important;
    font-size: 0.8rem !important;
    padding-left: 15px !important;
  }

  .explore-menu li:first-child,
  .explore-menu li:nth-child(3) {
    font-size: 1.4rem !important;
    margin-bottom: 10px !important;
  }

  .explore-menu li:not(:first-child):not(:nth-child(3)) {
    font-size: 0.5rem !important;
    padding-left: 15px !important;
  }
}

/ Even smaller screens */
@media screen and (max-width: 480px) {
  .explore-menu li {
    margin: 8px 0 !important;
    font-size: 0.7rem !important;
    padding-left: 12px !important;
  }

  .explore-menu li:first-child,
  .explore-menu li:nth-child(3) {
    font-size: 0.8rem !important;
    margin-bottom: 8px !important;
  }

  .explore-menu li:not(:first-child):not(:nth-child(3)) {
    font-size: 0.7rem !important;
    padding-left: 12px !important;
  }
}

      

.represent-nav-menu a {
  color: black;
  text-decoration: none;
  font-size: 1.1rem;
  text-transform: uppercase;
  letter-spacing: 1px;
  transition: var(--menu-transition);
}

.menu-image {
  flex: 1;
  height: 100%;
  overflow: hidden;
  position: relative;
}

.menu-image img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  position: absolute;
  top: 0;
  left: 0;
}

.represent-nav-menu a:hover {
  opacity: 0.7;
}


.cart-drawer {
  visibility: hidden;
  position: fixed;
  top: 0;
  right: 0;
  width: 100%;
  height: 100%;
  z-index: 1001;
}

.cart-drawer.active {
  visibility: visible;
  backdrop-filter: blur(5px);
  -webkit-backdrop-filter: blur(5px);
}

.cart-drawer__overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(255, 255, 255, 0.2) !important;
  opacity: 0;
  transition: all 0.3s ease;
}

.cart-drawer.active .cart-drawer__overlay {
  opacity: 1;
  backdrop-filter: blur(5px);
  -webkit-backdrop-filter: blur(5px);
}

.drawerinner {
  position: fixed;
  top: 0;
  right: 0;
  width: 375px;
  height: 100%;
  background: white;
  transform: translateX(100%);
  transition: transform 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  display: flex;
  flex-direction: column;
  z-index: 1002;
}

.cart-drawer.active .drawerinner {
  transform: translateX(0);
}

.cart-drawer__header {
  padding: 16px;
  border-bottom: 1px solid #e5e5e5;
  display: flex;
  justify-content: space-between;
  align-items: center;
  position: sticky;
  top: 0;
  background: white;
  z-index: 2;
}

.cart-drawer__heading {
  margin: 0;
  font-size: 12px;
  text-transform: uppercase;
  letter-spacing: 1px;
  font-weight: 400;
}

.drawer__close {
  background: none;
  border: none;
  padding: 5px;
  cursor: pointer;
  opacity: 0.5;
  transition: opacity 0.3s ease;
}

.drawer__close:hover {
  opacity: 1;
}

.free-shipping-bar {
  background: #f7f7f7;
  padding: 12px 16px;
  font-size: 11px;
  text-transform: uppercase;
  letter-spacing: 1px;
  text-align: center;
  border-bottom: 1px solid #e5e5e5;
}

.free-shipping-bar.achieved {
  background: #e8f3e8;
  color: #2c7a2c;
}

.cart-items {
  flex: 1;
  overflow-y: auto;
  padding: 0;
}

.cart-item {
  display: flex;
  gap: 12px;
  padding: 20px 16px;
  border-bottom: 1px solid #e5e5e5;
  position: relative;
}

.cart-item__image {
  width: 70px;
  height: 90px;
  background: #f8f8f8;
}

.cart-item__image img {
  width: 100%;
  height: 100%;
  object-fit: contain;
}

.cart-item__details {
  flex: 1;
  min-width: 0;
}

.cart-item__name {
  margin: 0;
  font-size: 12px;
  text-transform: uppercase;
  letter-spacing: 0.5px;
  font-weight: 400;
  margin-bottom: 4px;
}

.cart-item__variant {
  margin: 0;
  font-size: 11px;
  color: #757575;
  text-transform: uppercase;
  letter-spacing: 0.5px;
  margin-bottom: 12px;
}

.cart-item__qty-price {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

/* Desktop-only quantity selector styles */
@media screen and (min-width: 769px) {
  .product-form-container .quantity {
    width: 100% !important;
    max-width: none !important;
    margin: 30px 0 !important;
  }

  .product-form-container .quantity-selector {
    display: grid !important;
    grid-template-columns: repeat(3, 1fr) !important;
    gap: 10px !important;
    width: 100% !important;
    max-width: 100% !important;
    border: none !important;
  }

  .product-form-container .quantity input {
    width: 100% !important;
    height: 45px !important;
    border: 1px solid #ddd !important;
    text-align: center !important;
  }

  .product-form-container .quantity-button {
    width: 100% !important;
    height: 45px !important;
    border: 1px solid #ddd !important;
  }

  .product-info {
    padding-right: 20px !important;
  }
}

/* Cart drawer quantity styles */
.cart-item .quantity {
  display: grid !important;
  grid-template-columns: repeat(3, 1fr) !important;
  gap: 10px !important;
  width: 140px !important;
  margin: 0 !important;
}

.cart-item .quantitybutton,
.cart-item .quantity__button{
  width: 100% !important;
  height: 45px !important;
  border: 1px solid #ddd !important;
  background: none !important;
  cursor: pointer !important;
  font-size: 16px !important;
  display: flex !important;
  align-items: center !important;
  justify-content: center !important;
  color: #000 !important;
  transition: all 0.3s ease !important;
}

.cart-item .quantity__button:hover,
.cart-item .quantity__button:hover{
  background: black !important;
  color: white !important;
  border-color: black !important;
}

.cart-item .quantityinput,
.cart-item .quantity__input{
  width: 100% !important;
  height: 45px !important;
  border: 1px solid #ddd !important;
  text-align: center !important;
  font-size: 14px !important;
  -moz-appearance: textfield !important;
  background: white !important;
  padding: 0 !important;
  margin: 0 !important;
}

.cart-item .quantity__input::-webkit-outer-spin-button,
.cart-item .quantity__input::-webkit-inner-spin-button {
  -webkit-appearance: none !important;
  margin: 0 !important;
}

.quantity__input::-webkit-outer-spin-button,
.quantity__input::-webkit-inner-spin-button,
.quantity input::-webkit-outer-spin-button,
.quantity input::-webkit-inner-spin-button {
  -webkit-appearance: none !important;
  margin: 0 !important;
}

@media screen and (max-width: 768px) {
  .cart-item .quantity {
    width: 100% !important;
    max-width: 280px !important;
    margin: 10px auto !important;
    gap: 8px !important;
  }

  .cart-item .quantity__button,
  .cart-item .quantity__input {
    height: 40px !important;
    font-size: 14px !important;
  }
}

@media screen and (max-width: 480px) {
  .cart-item .quantity {
    max-width: 240px !important;
    gap: 6px !important;
  }

  .cart-item .quantity__button,
  .cart-item .quantity__input {
    height: 36px !important;
    font-size: 12px !important;
  }
}

@media screen and (max-width: 480px) {
  .quantity,
  .cart-item .quantity {
    width: 100px !important;
    height: 36px !important;
  }

  .quantity__button,
  .quantity-button,
  .cart-item .quantity__button {
    width: 32px !important;
    height: 36px !important;
    font-size: 12px !important;
  }

  .quantity__input,
  .quantity input,
  .cart-item .quantity__input {
    width: 36px !important;
    height: 36px !important;
    font-size: 12px !important;
  }
}

.quantity__input::-webkit-outer-spin-button,
.quantity__input::-webkit-inner-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

.cart-item__price {
  font-size: 12px;
  font-weight: 400;
  letter-spacing: 0.5px;
}

.cart-item__remove {
  background: none;
  border: none;
  padding: 5px;
  cursor: pointer;
  position: absolute;
  right: 12px;
  top: 20px;
  opacity: 0.5;
  transition: opacity 0.3s ease;
}

.cart-item__remove:hover {
  opacity: 1;
}

.cart-footer {
  padding: 16px;
  border-top: 1px solid #e5e5e5;
  position: sticky;
  bottom: 0;
  background: white;
  z-index: 2;
}

.cart-subtotal {
  display: flex;
  justify-content: space-between;
  margin-bottom: 16px;
  font-size: 12px;
  text-transform: uppercase;
  letter-spacing: 1px;
  font-weight: 400;
}

.checkout-button,
.continue-shopping {
  display: flex;
  width: 100%;
  height: 44px;
  text-align: center;
  text-transform: uppercase;
  text-decoration: none;
  cursor: pointer;
  font-size: 11px;
  letter-spacing: 1px;
  font-weight: 400;
  align-items: center;
  justify-content: center;
}

.checkout-button {
  background: black;
  color: white;
  border: none;
  margin-bottom: 12px;
}

.continue-shopping {
  background: white;
  color: black;
  border: 1px solid black;
}

.cart-empty {
  text-align: center;
  padding: 40px 16px;
  font-size: 11px;
  text-transform: uppercase;
  letter-spacing: 1px;
}

.cart-empty p {
  margin-bottom: 16px;
}

.browse-products {
  display: inline-block;
  padding: 12px 24px;
  background: black;
  color: white;
  text-decoration: none;
  font-size: 11px;
  text-transform: uppercase;
  letter-spacing: 1px;
  transition: opacity 0.3s ease;
  margin-top: 16px;
}

.browse-products:hover {
  opacity: 0.8;
}

@media screen and (max-width: 480px) {
  .drawerinner {
    width: 100%;
  }
}

@media screen and (max-width: 768px) {
  .header-layout {
    height: 40px;
    padding: 0px;
    display: flex;
    align-items: center;
  
  }

  .represent-nav {
    min-width: 0;
    height: 40px;
    display: flex;
    align-items: center;
    position: absolute;
    top: .75px; 
    padding: 0;
    margin: 0;
    left: 20px;
  }

    .represent-nav-menu {
    min-width: 320px; 
    padding: 0; 
    height: 50vh;
  }

  .menu-image img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  position: absolute;
  top: 0;
  left: 0;
  }
  
  .menu-content {
    gap: 0;
    display: flex;
    justify-content: space between;
    align-items: stretch;
    height: 100%;
    width: 100%;
}
  
  .represent-nav-menu ul {
    flex: 1;
    padding: 20px
  }

  .represent-nav-menu li:first-child {
    font-size: 12px
    margin-bottom: 15px; 
    font-weight: bold; 
  }

  .represent-nav-menu li:not(:first-child) {
    font-size: 10px 
    padding-left: 15px; 
  }

  .menu-image {
    flex: 1;
    height: 100%;
  }

  .nav-items {
    gap: 8px;
    display: flex;
    align-items: center;
    height: 40px;
    margin: 0;
    padding: 0;
    padding-left: 5;
  }

  .nav-link {
    font-size: 9px !important;
    letter-spacing: 0.3px;
    height: 40px;
    display: flex;
    align-items: center;
  }

  .site-logo {
    position: absolute;
    left: 50%;
    transform: translateX(-50%);
    display: flex;
    align-items: center;
    height: 40px;
  }

  .site-logo h1 {
    font-size: 11px !important;
    letter-spacing: 0.5px;
  }

  .cart-icon {
 position: absolute;
    right: 20px;
    height: 40px;
    display: flex;
    align-items: center;
  }

  .cart-icon svg {
    width: 16px !important;
    height: 16px !important;
    color: white;
  }
}

@media screen and (max-width: 480px) {
  .header-layout {
    height: 35px;
    padding: 0 15px;
  }

  .represent-nav {
    height: 35px;
  }

    .represent-nav-menu {
    min-width: 280px; 
    height: 50vh;
    padding: 0; 
  }
  
  .menu-image {
    flex: 1;
    height: 100%;
  }

  .nav-items {
    gap: 6px;
    height: 35px;
  }

  .nav-link {
    font-size: 6px;
    letter-spacing: 0.2px;
    height: 35px;
  }

  .site-logo {
    height: 35px;
  }

  .site-logo h1 {
    font-size: 6px;
  }

  .cart-icon {
    height: 35px;
  }

  .cart-icon svg {
    width: 10px;
    height: 10px;
    color: white;
  }
}
    {% endstyle %}

    {{ 'base.css' | asset_url | stylesheet_tag }}

    {%- unless settings.type_body_font.system? -%}
      <link rel="preload" as="font" href="{{ settings.type_body_font | font_url }}" type="font/woff2" crossorigin>
    {%- endunless -%}
    {%- unless settings.type_header_font.system? -%}
      <link rel="preload" as="font" href="{{ settings.type_header_font | font_url }}" type="font/woff2" crossorigin>
    {%- endunless -%}

    {%- if settings.predictive_search_enabled -%}
      <link rel="stylesheet" href="{{ 'component-predictive-search.css' | asset_url }}" media="print" onload="this.media='all'">
    {%- endif -%}

    <script>document.documentElement.className = document.documentElement.className.replace('no-js', 'js');
    if (Shopify.designMode) {
      document.documentElement.classList.add('shopify-design-mode');
    }
    </script>
    <style>
    {% if settings.enable_custom_font %}
    @font-face {
      font-family: '{{ settings.custom_font_name_heading }}';
      src: url('{{ settings.custom_font_url_heading }}') format('woff2');
    }
    @font-face {
      font-family: '{{ settings.custom_font_name_regular }}';
      src: url('{{ settings.custom_font_url_regular }}') format('woff2');
    }
    h1, h2, h3, h4, h5, h6, .h1, .h2, .h3, .h4, .h5, .h6, a.menu-link, .running-text-content, .list-menu__item, .button, button, .collections_link a, .enter-button a, .two_bg_enter_button a, .enter-skip-button{
      font-family: '{{ settings.custom_font_name_heading }}' !important;
    }
    html, body, .popupinput{
      font-family: '{{ settings.custom_font_name_regular }}' !important;
    }
    {% else %}
    h1, h2, h3, h4, h5, h6, .h1, .h2, .h3, .h4, .h5, .h6, a.menu-link, .running-text-content, .list-menu__item, .button, button, .collections_link a, .enter-button a, .two_bg_enter_button a, .enter-skip-button{
      font-family: var(--font-heading-family) !important;
    }
    html, body, .popupinput{
      font-family: var(--font-body-family) !important;
    }
    {% endif %}

    /* Your existing custom styles continue here... */
    </style>
  </head>

  {% if template == 'index' %}
    {% section 'enter-page' %}
  {% endif %}

  {% if template == 'page' or template == 'page.contact' or template == 'page.lookbook' or template == 'page.pre-order-track' %}
    {% section 'pagebg' %}
  {% endif %}

  {% section 'websitebg' %}
  {% section 'running-text' %}
  {% section 'pageloader' %}
  {% section 'newsletter-popup' %}

{% if template == 'password' %}
    {% section 'passwordbg' %}
{% endif %}

 <body class="gradient">
<cart-drawer>
  <div id="CartDrawer" class="cart-drawer">
    <div id="CartDrawer-Overlay" class="cart-drawer__overlay"></div>
    <div class="drawerinner">
      <div class="cart-drawer__header">
        <h2 class="cart-drawer__heading">YOUR SHOPPING CART</h2>
        <button class="drawer__close" type="button">
          <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M18 6L6 18" stroke="currentColor" stroke-width="1.5"/>
            <path d="M6 6L18 18" stroke="currentColor" stroke-width="1.5"/>
          </svg>
        </button>
      </div>

      <div class="cart-items">
        {%- if cart.item_count > 0 -%}
          {%- for item in cart.items -%}
            <div class="cart-item" id="CartItem-{{ item.index | plus: 1 }}">
              <div class="cart-item__image">
                <img src="{{ item.image | image_url: width: 140 }}" alt="{{ item.image.alt | escape }}">
              </div>
              <div class="cart-item__details">
                <h3 class="cart-item__name">{{ item.product.title }}</h3>
                <p class="cart-item__variant">{{ item.variant.title }}</p>
                <div class="cart-item__qty-price">
  <div class="quantity">
    <button class="quantitybutton" name="minus" type="button">-</button>
    <input class="quantityinput"
      type="number"
      name="updates[]"
      value="{{ item.quantity }}"
      min="0"
      data-index="{{ item.index | plus: 1 }}"
      readonly
    >
    <button class="quantitybutton" name="plus" type="button">+</button>
  </div>
  <p class="cart-item__price">{{ item.final_line_price | money }}</p>
</div>
              </div>
              <button class="cart-item__remove" 
		data-index="{{ item.index | plus: 1 }}">
                <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path d="M5.5 2.5V2C5.5 1.44772 5.94772 1 6.5 1H9.5C10.0523 1 10.5 1.44772 10.5 2V2.5M2 2.5H14M12.5 2.5V13C12.5 13.5523 12.0523 14 11.5 14H4.5C3.94772 14 3.5 13.5523 3.5 13V2.5M6.5 6V10.5M9.5 6V10.5" stroke="currentColor" stroke-width="1.2" stroke-linecap="round" stroke-linejoin="round"/>
              </svg>
          </button>

            </div>
          {%- endfor -%}
        {%- else -%}
          <div class="cart-empty">
            <p>Your cart is empty</p>
            <a href="/collections/all" class="browse-products">Browse Products</a>
          </div>
        {%- endif -%}
      </div>

      <div class="cart-footer" {% if cart.item_count == 0 %}style="display: none;"{% endif %}>
  <div class="cart-subtotal">
    <span>Subtotal</span>
    <span>{{ cart.total_price | money }}</span>
  </div>
  <a href="/checkout" class="checkout-button">Checkout</a>
  <button class="continue-shopping" type="button">Continue Shopping</button>
</div>
      
    </div>
  </div>
</cart-drawer>
 
    <!-- New Background Image System -->
    <div class="fullscreen-background"></div>


<div class="header-layout">
  <!-- Left side - Navigation -->
<div class="represent-nav">
  <div class="nav-items">
    <div class="represent-nav-item">
      <a href="/collections/all" class="nav-link">SHOP</a>
      <div class="represent-nav-menu">
        <div class="menu-content">
          <ul>
  <li>SS25</li>
  <li><a href="/collections/all">Shop All</a></li>
  <li><a href="/collections/shirts">Shirts</a></li>
  <li><a href="/collections/jerseys">Jerseys</a></li>
</ul>
          <div class="menu-image">
            <img src="{{ 'menu pic_webp.JPG' | asset_url }}" alt="Collection Preview">
          </div>
        </div>
      </div>
    </div>
   <div class="represent-nav-item">
  <a href="#" class="nav-link">Explore</a>
  <div class="represent-nav-menu explore-menu">
    <div class="menu-content">
      <ul>
        <li>Lookbook</li>
            <li><a href="/pages/lookbook">View Lookbook</a></li>
            <li>Contact Us</li>
            <li><a href="https://instagram.com/entrance.usa">Instagram</a></li>
            <li><a href="https://tiktok.com/@entranceusa">TikTok</a></li>
            <li><a href="mailto:info@entranceusa.shop">Email</a></li>
      </ul>
    </div>
  </div>
</div>

  </div>
  </div>

  <!-- Center - Logo with Home Link -->
  <div class="site-logo">
    <a href="/" style="text-decoration: none; color: inherit;">
      <h1>ENTRANCE</h1>
    </a>
  </div>

<!-- Right side - Cart -->
<div class="cart-icon">
  <button type="button" class="cart-link" id="cart-icon-bubble" data-drawer-trigger>
    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
      <circle cx="9" cy="21" r="1"></circle>
      <circle cx="20" cy="21" r="1"></circle>
      <path d="M1 1h4l2.68 13.39a2 2 0 0 0 2 1.61h9.72a2 2 0 0 0 2-1.61L23 6H6"></path>
    </svg>
    <span id="cart-item-count" class="cart-item-count" style="display: none;">0</span> <!-- Cart Item Count -->
  </button>
</div>
  </div>

      
    <div id="custom-cursor"></div>

<a class="skip-to-content-link button visually-hidden" href="#MainContent">
      {{ "accessibility.skip_to_text" | t }}
    </a>

{% if template == 'collection' %}
{% if template == 'collection' %}
  <!-- Add popup code here -->
<div id="shipping-popup" class="shipping-popup">
  <div class="shipping-popup-content">
    <span class="close-popup">&times;</span>
    <h2 class="popup-title">Buy 2, Ship Free</h2>
    <p class="popup-subtitle">No codes. No catch. Add minimum one of each item to your cart- shipping's on us!</p>
    <h2 class="popup-brand">ENTRANCE</h2>
  </div>
</div>

<style>
  .shipping-popup {
    display: none;
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    background-color: white;
    padding: 30px;
    z-index: 1000;
    width: 90%;
    max-width: 400px;
    text-align: center;
    box-shadow: 0 2px 10px rgba(0,0,0,0.1);
  }

  .shipping-popup-content {
    position: relative;
  }

  .popup-title {
    margin: 0 0 15px 0;
    font-size: 24px;
    font-weight: 700;
    letter-spacing: 1px;
    text-transform: uppercase;
  }

  .popup-subtitle {
    margin: 0 0 15px 0;
    font-size: 14px;
    letter-spacing: 0.5px;
    line-height: 1.4;
    font-weight: 400;
  }

  .popup-brand {
    margin: 0;
    font-size: 24px;
    font-weight: 700;
    letter-spacing: 2px;
    text-transform: uppercase;
  }

  .close-popup {
    position: absolute;
    top: -15px;
    right: -15px;
    cursor: pointer;
    font-size: 24px;
    color: black;
  }

  .popup-overlay {
    display: none;
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0,0,0,0.5);
    z-index: 999;
  }

  @media screen and (max-width: 768px) {
    .shipping-popup {
      width: 85%;
      padding: 20px;
    }
    
    .popup-title {
      font-size: 20px;
    }
    
    .popup-subtitle {
      font-size: 12px;
    }
    
    .popup-brand {
      font-size: 20px;
    }
  }
  </style>

  <script>
    document.addEventListener('DOMContentLoaded', function() {
      if (!localStorage.getItem('shippingPopupShown')) {
        const overlay = document.createElement('div');
        overlay.className = 'popup-overlay';
        document.body.appendChild(overlay);
        overlay.style.display = 'block';
        
        const popup = document.getElementById('shipping-popup');
        popup.style.display = 'block';
        
        function closePopup() {
          popup.style.display = 'none';
          overlay.style.display = 'none';
          localStorage.setItem('shippingPopupShown', 'true');
        }
        
        document.querySelector('.close-popup').addEventListener('click', closePopup);
        overlay.addEventListener('click', closePopup);
        
        document.addEventListener('keydown', function(e) {
          if (e.key === 'Escape') {
            closePopup();
          }
        });
        
        setTimeout(closePopup, 30000);
      }
    });
  </script>
{% endif %}
                  
  {% section 'collections-filter' %}
  {% section 'hide-sold-out' %}

                  
  <div class="hero-section">
  <!-- Desktop hero (your current setup) -->
  <div class="hero-image desktop-hero">
    <img src="{{ 'group photo.JPG' | asset_url }}" alt="Hero Image" class="main-hero-image">
  </div>
  
  <!-- Mobile hero video -->
  <div class="hero-video mobile-hero">
    <video class="main-hero-video" autoplay muted loop playsinline>
      <source src="https://cdn.shopify.com/videos/c/o/v/e137e46e0efc4948924ba22ef7dd93d1.mp4" type="video/mp4">
    </video>
  </div>
</div>


  <style>
.hero-section {
  width: 100%;
  min-height: 50vh;
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 140px 0 100px; 
  box-sizing: border-box;
  overflow: visible;
}

.hero-image {
  width: 100%;
  max-width: 3000px; 
  margin: 0 auto;
  display: flex;
  align-items: center;
  justify-content: center;
}

.hero-video {
  width: 100%;
  height: 100%;
  position: absolute;
  top: 0;
  left: 0;
  overflow: hidden;
}

.main-hero-image {
  width: 100%;
  max-height: 120vh;
  object-fit: contain;
  display: block;
}

.main-hero-video {
  width: 100%;
  height: 100%;
  object-fit: cover;
  object-position: center;
}

.mobile-hero {
  display: none;
}
    
@media screen and (max-width: 768px) {
  .hero-section {
    height: 60vh; /* Adjust height for mobile if needed */
  }
  
  .desktop-hero {
    display: none;
  }
  
  .mobile-hero {
    display: block;
  }
  
  .main-hero-video {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }
}

@media screen and (max-width: 480px) {
  .hero-section {
    height: 50vh; /* Further adjust height for smaller devices if needed */
  }
}


    .product-grid-container {
      padding: 0px 35px !important; 
      background: white;
      position: relative;
      z-index: 2;
      width: 100%;
      box-sizing: border-box;
    }

    .product-grid {
      max-width: 1400px;
      margin: 0 auto;
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
      gap: 40px;
      padding: 0; 
    }

@media screen and (max-width: 768px) {
  .product-grid {
    grid-template-columns: repeat(2, 1fr) !important;
    gap: 15px !important;
  }

  .quick-add-trigger {
    position: absolute !important;
    bottom: 0 !important;
    left: 0 !important;
    width: 100% !important;
    height: 40px !important;
    z-index: 3 !important;
    opacity: 1 !important;
    transition: opacity 0.2s ease !important;
    display: flex !important;
    align-items: center !important;
    justify-content: flex-end !important;
    background: transparent !important;
  }

@media screen and (max-width: 768px) {
  .quick-add-trigger,
  .quick-add-plus,
  .size-selector-popup {
    display: none !important;
  }

  .size-option {
    width: 28px !important;
    height: 28px !important;
    font-size: 10px !important;
  }
}

  </style>

  <div class="product-grid-container">
    <div class="product-grid">
      {% paginate collection.products by 24 %}
        {% for product in collection.products %}
<!-- Product card structure -->
<div class="product-card">
  <a href="{{ product.url }}">
    <div class="image-container">
      {% if product.featured_image %}
        <img
          class="primary-image"
          src="{{ product.featured_image | img_url: 'master' }}"
          alt="{{ product.title | escape }}"
          loading="lazy"
        >
      {% endif %}
      {% if product.images[1] %}
        <img
          class="hover-image"
          src="{{ product.images[1] | img_url: 'master' }}"
          alt="{{ product.title | escape }}"
          loading="lazy"
        >
      {% endif %}
    </div>
  </a>

  {% if request.device.type != 'mobile' %}
    <!-- Quick Add Feature - Desktop Only -->
    <div class="quick-add-trigger">
      <span class="select-size-text">SELECT A SIZE</span>
      <div class="quick-add-plus">+</div>
      <div class="size-selector-popup" data-product-handle="{{ product.handle }}">
        {% for variant in product.variants %}
          <div class="size-option {% unless variant.available %}unavailable{% endunless %}" 
               data-variant-id="{{ variant.id }}"
               data-variant-title="{{ variant.title }}">
            {{ variant.title }}
          </div>
        {% endfor %}
      </div>
    </div>
  {% endif %}

  <a href="{{ product.url }}" class="product-info">
    <h3>{{ product.title }}</h3>
    <p>{{ product.price | money }}</p>
  </a>
</div>

        {% endfor %}
        
        {% if paginate.pages > 1 %}
          <div class="pagination">
            {{ paginate | default_pagination }}
          </div>
        {% endif %}
      {% endpaginate %}
    </div>
  </div>

  <style>
.hero-section {
  width: 100%;
  height: 78vh;
  position: relative;
  overflow: hidden;
  margin: 0;
  padding: 0;
  top: 0;
  box-sizing: border-box;
}

.hero-image {
  width: 100%;
  height: 100%;
  position: absolute;
  top: 0;
  left: 0;
}

.main-hero-image {
  width: 100%;
  max-height: 78vh;
  object-fit: cover;
  object-position: center 15%;
}

.product-grid-container {
  padding: 60px 20px;
  background: white;
  position: relative;
  z-index: 2;
  width: 100%;
  max-width: 100%;
  box-sizing: border-box;
}

.product-grid {
  max-width: 1400px;
  margin: 0 auto;
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
  gap: 40px;
  padding: 20px;
  box-sizing: border-box;
}

.product-card {
  position: relative;
  transition: transform 0.3s ease;
  display: flex;
  flex-direction: column;
  text-align: center;
  margin-bottom: 20px;
}

.product-card:hover {
  transform: translateY(-5px);
}

.product-info {
  text-decoration: none;
  color: black;
  z-index: 2;
  padding: 10px 0;
  text-align: left;
}

.product-info h3,
.product-info p {
  color: black;
  opacity: 1;
  margin: 5px 0;
}

.image-container {
  position: relative;
  width: 100%;
  overflow: hidden;
  aspect-ratio: 1/1;
  z-index: 1;
  margin-bottom: 10px;
}

.primary-image,
.hover-image {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  object-fit: contain;
  transition: opacity 0.3s ease;
}

.hover-image {
  opacity: 0;
}

.product-card:hover .primary-image {
  opacity: 0;
}

.product-card:hover .hover-image {
  opacity: 1;
}

.product-card h3 {
  font-size: 14px;
  font-weight: 400;
  letter-spacing: 0.5px;
  margin: 0 0 5px 0;
}

.product-card p {
  font-size: 14px;
  margin: 0;
}

.quick-add-trigger {
  position: absolute !important;
  bottom: 0 !important;
  left: 0 !important;
  width: 100% !important;
  height: 40px !important;
  z-index: 3 !important;
  opacity: 0 !important;
  transition: opacity 0.2s ease !important;
  display: flex !important;
  align-items: center !important;
  justify-content: flex-end !important;
  background: transparent !important;
}

.product-card:hover .quick-add-trigger {
  opacity: 1 !important;
}

.quick-add-plus {
  width: 35px !important;
  height: 35px !important;
  background: rgba(255, 255, 255, 0.8) !important;
  border-radius: 50% !important;
  display: flex !important;
  align-items: center !important;
  justify-content: center !important;
  cursor: pointer !important;
  font-size: 22px !important;
  position: absolute !important;
  bottom: 5px !important;
  right: 5px !important;
  z-index: 4 !important;
}

.size-selector-popup {
  position: absolute !important;
  bottom: 0 !important;
  left: 0 !important;
  width: 100% !important;
  display: none !important;
  flex-direction: row !important;
  gap: 4px !important;
  padding: 8px !important;
  background: rgba(255, 255, 255, 0.95) !important;
  z-index: 20 !important;
  justify-content: center !important;
}

.quick-add-plus:hover + .size-selector-popup,
.size-selector-popup:hover {
  display: flex !important;
}

@media screen and (max-width: 768px) {
  .quick-add-trigger,
  .quick-add-plus,
  .size-selector-popup {
    display: none !important;
    visibility: hidden !important;
    height: 0 !important;
    width: 0 !important;
    overflow: hidden !important;
  }
}

.select-size-text {
  display: none;
}

@media screen and (max-width: 768px) {
  .product-grid {
    grid-template-columns: repeat(2, 1fr) !important;
    gap: 15px !important;
    padding: 15px !important;
  }

  .quick-add-trigger {
    opacity: 1 !important;
    display: flex !important;
    justify-content: flex-end !important;
  }

  .quick-add-plus {
    position: absolute !important;
    right: 10px !important;
    bottom: 10px !important;
  }

  .size-selector-popup {
    display: none !important;
    flex-direction: row !important;
    justify-content: center !important;
    align-items: center !important;
    padding: 8px !important;
    gap: 4px !important;
    background: rgba(255, 255, 255, 0.95) !important;
  }

  .quick-add-plus:hover + .size-selector-popup,
  .quick-add-plus:active + .size-selector-popup,
  .size-selector-popup:hover {
    display: flex !important;
  }

  .size-option {
    width: 28px !important;
    height: 28px !important;
    font-size: 10px !important;
  }
}

@media screen and (max-width: 480px) {
  .hero-section {
    height: 50vh;
  }

  .product-grid {
    grid-template-columns: repeat(auto-fill, minmax(120px, 1fr));
    gap: 15px;
  }

  .product-card h3 {
    font-size: 11px;
  }

  .product-card p {
    font-size: 11px;
  }
}

.select-size-text {
  display: none;
}

@media screen and (max-width: 768px) {
  .select-size-text {
    display: block;
    color: #fff;
    font-size: 12px;
    letter-spacing: 1px;
    text-transform: uppercase;
  }
}

.size-option {
  position: relative;
  cursor: pointer;
  width: 32px !important;
  height: 32px !important;
  padding: 0 !important;
  display: flex !important;
  align-items: center !important;
  justify-content: center !important;
  text-align: center !important;
  font-size: 11px !important;
  color: black !important;
  background: white !important;
  border: 1px solid rgba(0, 0, 0, 0.1) !important;
  border-radius: 2px !important;
  transition: background 0.2s ease;
  flex: none !important;
}

.size-option:hover {
  background: white !important;
}

.size-option.loading::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(0, 0, 0, 0.1);
  animation: pulse 1s infinite;
}

.size-option.unavailable {
  text-decoration: line-through !important;
  opacity: 0.4 !important;
  cursor: not-allowed !important;
  pointer-events: none;
}

@keyframes pulse {
  0% { opacity: 0.6; }
  50% { opacity: 1; }
  100% { opacity: 0.6; }
}

.quick-add-trigger:hover .quick-add-plus {
  display: none !important;
}

.quick-add-trigger:hover .size-selector-popup {
  display: flex !important;
}

.quick-add-trigger:hover ~ .product-info {
  opacity: 1 !important;
  color: inherit !important;
}

.quick-add-trigger:hover ~ .product-info h3,
.quick-add-trigger:hover ~ .product-info p {
  opacity: 1 !important;
  color: inherit !important;
}

.image-container:hover ~ .product-info,
.image-container:hover ~ .product-info h3,
.image-container:hover ~ .product-info p {
  opacity: 1 !important;
  color: inherit !important;
}
    
.pagination {
  grid-column: 1 / -1;
  text-align: center;
  margin-top: 40px;
}

@media screen and (max-width: 768px) {
  .hero-section {
    height: 60vh;
  }

  .product-grid {
    grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
    gap: 20px;
    padding: 10px;
    margin: 0;
  }

  .product-grid-container {
    padding: 40px 10px;
    margin: 0;
  }

 .quick-add-trigger {
  width: 40px !important;
  height: 40px !important;
  bottom: 0 !important;
  right: 0 !important;
  background: transparent !important;
  display: flex !important;
  align-items: center !important;
  justify-content: flex-end !important;
}

  .quick-add-plus {
    position: absolute !important;
    right: 10px !important;
    bottom: 5px !important;
    z-index: 21 !important;
  }

  .size-selector-popup {
    visibility: hidden !important;
    opacity: 0 !important;
    display: flex !important;
    transition: visibility 0s, opacity 0.2s linear !important;
    background: transparent) !important;
  }

  .quick-add-plus:hover ~ .size-selector-popup,
  .quick-add-plus:active ~ .size-selector-popup,
  .size-selector-popup:hover {
    visibility: visible !important;
    opacity: 1 !important;
  }

  .size-option {
    width: 28px !important;
    height: 28px !important;
    font-size: 10px !important;
  }
}

  .size-option {
    width: 28px !important;
    height: 28px !important;
    font-size: 10px !important;
  }
}

@media screen and (max-width: 480px) {
  .hero-section {
    height: 50vh;
  }

  .product-grid {
    grid-template-columns: repeat(auto-fill, minmax(120px, 1fr));
    gap: 15px;
  }

  .product-card h3 {
    font-size: 0.9rem;
  }

  .product-card p {
    font-size: 0.8rem;
  }
}

  .product-card p {
    font-size: 0.8rem;
  }
}
    @media screen and (min-width: 769px) {
  /* Product form submit button (Add to Cart) */
  .product-form__submit {
    display: block !important;
    width: 100% !important;
    height: 44px !important;
    background: black !important;
    color: white !important;
    border: none !important;
    cursor: pointer !important;
    text-transform: uppercase !important;
    letter-spacing: 1px !important;
    font-size: 11px !important;
    margin-bottom: 40px !important;
    transition: opacity 0.3s ease !important;
    opacity: 1 !important;
    visibility: visible !important;
  }

  /* Accordion buttons (Shipping Information and Size Chart) */
  .product-details .accordion {
    display: block !important;
    width: 100% !important;
    max-width: none !important;
    margin: 0 !important;
    opacity: 1 !important;
    visibility: visible !important;
  }

  .product-details .accordion-header {
    display: flex !important;
    width: 100% !important;
    padding: 20px 0 !important;
    background: none !important;
    border: none !important;
    text-align: center !important;
    cursor: pointer !important;
    justify-content: center !important;
    align-items: center !important;
    font-size: 14px !important;
    text-transform: uppercase !important;
    letter-spacing: 1px !important;
    gap: 10px !important;
    opacity: 1 !important;
    visibility: visible !important;
  }

  .product-details .accordion-content {
    display: none !important; /* Initially hidden until clicked */
    padding: 0 0 20px !important;
    font-size: 14px;.accordion-panel p {
  font-family: var(--font-body-family) !important;
  font-size: 12px !important;
  line-height: 1.6 !important;
}

@media screen and (min-width: 769px) {
  .accordion-panel p {
    font-size: 14px !important;
  }
}
    line-height: 1.6 !important;
    text-align: center !important;
    width: 100% !important;
    opacity: 1 !important;
    visibility: visible !important;
  }

  .accordion-item.active .accordion-content {
    display: block !important;
/* Add these new rules here */
  .product-details .accordion-content {
    max-height: 0;
    overflow: hidden;
    transition: max-height 0.3s ease-out;
  }

  .accordion-item.active .accordion-content {
    max-height: 500px;
    display: block !important;
    visibility: visible !important;
    opacity: 1 !important;
  }

  .product-details .accordion-header .icon {
    position: absolute;
    right: 10px;
    transition: transform 0.3s ease;
  }

  .accordion-item.active .accordion-header .icon {
    transform: rotate(45deg);

.accordion-panel p {
  font-family: var(--font-body-family) !important;
  font-size: 12px !important;
  line-height: 1.6 !important;
}

@media screen and (min-width: 769px) {
  .accordion-panel p {
    font-size: 14px !important;
  }
}
    
}
</style>
{% endif %}
 
<main id="MainContent" class="content-for-layout focus-none" role="main" tabindex="-1">
  {% if template == 'product' %}
   <div class="product-page-wrapper" style="width: 100%;">
    <div class="product-container" style="width: 100%; margin-bottom: 0;">
      <div class="product-gallery">
        <div class="gallery-main">
          {% for media in product.media %}
            <div class="gallery-image">
              <img src="{{ media | img_url: '1400x' }}" alt="{{ media.alt | escape }}">
            </div>
          {% endfor %}
        </div>
      </div>

      <div class="product-info">
        <h1>{{ product.title }}</h1>
        <div class="price">{{ product.price | money }}</div>
        
        {% form 'product', product, class: 'product-form-container' %}
          {% if product.variants.size > 1 %}
            <div class="size-selector">
              <label>Size</label>
              <div class="size-options">
                {% for variant in product.variants %}
                  <div class="size-option {% if variant.available == false %}sold-out{% endif %}">
                    <input type="radio" 
                           id="variant-{{ variant.id }}" 
                           name="id" 
                           value="{{ variant.id }}"
                           {% if variant.available == false %}disabled{% endif %}
                           {% if forloop.first %}checked{% endif %}>
                    <label for="variant-{{ variant.id }}">{{ variant.title }}</label>
                  </div>
                {% endfor %}
              </div>
            </div>
          {% endif %}

       <div class="quantity">
  <div class="quantity-label">
    <label for="Quantity">Quantity</label>
  </div>
  <div class="quantity-selector">
    <button type="button" class="quantity-button minus">-</button>
    <input type="number" id="Quantity" name="quantity" value="1" min="1" readonly>
    <button type="button" class="quantity-button plus">+</button>
  </div>
</div>

<script>
  // Product page quantity selector
  document.addEventListener('DOMContentLoaded', function() {
    const quantityButtons = document.querySelectorAll('.quantity-button');
    const quantityInput = document.getElementById('Quantity');

    if (quantityButtons && quantityInput) {
      quantityButtons.forEach(button => {
        button.addEventListener('click', function() {
          const currentValue = parseInt(quantityInput.value);

          if (this.classList.contains('minus')) {
            if (currentValue > 1) {
              quantityInput.value = currentValue - 1;
            }
          } else if (this.classList.contains('plus')) {
            quantityInput.value = currentValue + 1;
          }
        });
      });
    }
  });
</script>

<style>
/* Quantity selector styles - matching size selector style */
/* Desktop-only quantity selector */
@media screen and (min-width: 769px) {
  .product-info {
    padding: 0 40px !important;
    width: 100% !important;
    box-sizing: border-box !important;
    overflow-x: hidden !important;
  }

  .quantity {
    width: 100% !important;
    margin: 30px 0 !important;
  }

  .quantity-label {
    width: 100% !important;
    margin-bottom: 15px !important;
    text-align: left !important;
  }

  .quantity-label label {
    display: block !important;
    text-transform: uppercase !important;
    font-size: 12px !important;
    letter-spacing: 1px !important;
    color: #777 !important;
  }

  .quantity-selector {
    display: grid !important;
    grid-template-columns: repeat(3, 1fr) !important;
    gap: 10px !important;
    width: 100% !important;
    border: none !important;
  }

  .quantity input {
    width: 100% !important;
    height: 45px !important;
    border: 1px solid #ddd !important;
    text-align: center !important;
    margin: 0 !important;
    font-size: 14px !important;
    -moz-appearance: textfield !important;
    background: white !important;
  }

  .quantity-button {
    width: 100% !important;
    height: 45px !important;
    border: 1px solid #ddd !important;
    margin: 0 !important;
    background: none !important;
    cursor: pointer !important;
    font-size: 16px !important;
    display: flex !important;
    align-items: center !important;
    justify-content: center !important;
    color: #000 !important;
    transition: all 0.3s ease !important;
  }

  .quantity-button:hover {
    background: black !important;
    color: white !important;
    border-color: black !important;
  }

  .product-container {
    width: 100% !important;
    max-width: 1600px !important;
    margin: 0 auto !important;
    overflow: hidden !important;
    box-sizing: border-box !important;
  }
}
</style>

<button 
  type="submit" 
  name="add" 
  class="product-form__submit button button--full-width"
  {% if product.selected_or_first_available_variant.available == false %}
    disabled
  {% endif %}
  onclick="addToCartAndOpenDrawer(this.form); return false;"
>
  <span>
    {%- if product.selected_or_first_available_variant.available -%}
      {{ 'products.product.add_to_cart' | t }}
    {%- else -%}
      {{ 'products.product.sold_out' | t }}
    {%- endif -%}
  </span>
</button>
        {% endform %}

        <div class="product-details">
  <div class="accordion">
    <div class="accordion-item">
      <button type="button" class="accordion-button" onclick="toggleAccordionNew(this)">
        Shipping Information
        <span class="icon">+</span>
      </button>
      <div class="accordion-panel">
        <p>Standard Shipping (1-3 business days)<br>
        ALL SALES ARE FINAL</p>
      </div>
    </div>

  <div class="accordion-item">
      <button type="button" class="accordion-button" onclick="toggleAccordionNew(this)">
        Size Guide
        <span class="icon">+</span>
      </button>
      <div class="accordion-panel">
        {% case product.handle %}
          {% when 'last-eye-t-shirt' %}
            <img src="{{ 'Untitled drawing (5).jpg' | asset_url }}" alt="Size Guide" class="size-guide-image">
          {% when 'mystic-arcane-jersey' %}
            <img src="{{ 'Untitled drawing (3).jpg' | asset_url }}" alt="Size Guide" class="size-guide-image">
          {% else %}
            <img src="{{ 'size-guide.jpg' | asset_url }}" alt="Size Guide" class="size-guide-image">
        {% endcase %}
      </div>
    </div>
  </div>
</div>


    <style>
.product-container {
  display: flex;
  margin: 0 auto;
  gap: 100px;
  padding: 120px 40px 40px 40px;
  max-width: 1600px;
  background: white;
  width: 100%;
  box-sizing: border-box;
  overflow: hidden !important;
}

/* Add these new rules */
html, body {
  overflow-x: hidden !important;
  width: 100%;
  margin: 0;
  padding: 0;
}

#MainContent {
  width: 100%;
  overflow-x: hidden;
  position: relative;
}

.product-page-wrapper {
  width: 100%;
  overflow: hidden;
}

.product-gallery {
  flex: 1.2;
  position: relative;
}

.product-info {
  flex: 0.8;
  padding: 0 40px;
  position: relative;
  top: 120px;
  align-self: flex-start;
  height: calc(100vh - 140px);
  overflow-y: auto;
  background: white;
  margin-right: -40px; /* Compensate for container padding */
}

.product-info::-webkit-scrollbar {
  width: 5px;
}

.product-info::-webkit-scrollbar-track {
  background: #f1f1f1;
}

.product-info::-webkit-scrollbar-thumb {
  background: #888;
  border-radius: 5px;
}

/* Ensure product details stay visible */
.product-details {
  background: white;
  position: relative;
  z-index: 1;
}

/* Header styles for product page */
{% if template == 'product' %}
.header-layout {
  background: transparent;
  color: black;
}

.cart-icon svg {
  color: black;
  stroke: black;
}

.nav-link {
  color: black;
}
{% endif %}

      .product-gallery {
        flex: 1.2;
        position: relative;
      }

      .gallery-main {
        display: flex;
        flex-direction: column;
        gap: 20px;
      }

      .gallery-image img {
        width: 100%;
        height: auto;
        display: block;
      }

      .product-info {
  flex: 0.8;
  padding: 0;
  position: relative;
  align-self: flex-start;
  overflow-y: visible;
}

      .product-info::-webkit-scrollbar {
        width: 5px;
      }

      .product-info::-webkit-scrollbar-track {
        background: #f1f1f1;
      }

      .product-info::-webkit-scrollbar-thumb {
        background: #888;
      }

      .product-info h1 {
        font-size: 24px;
        margin-bottom: 10px;
        text-transform: uppercase;
        letter-spacing: 1px;
        text-align: center;
        width: 100%;
      }

      .price {
        font-size: 20px;
        margin-bottom: 30px;
        text-align: center;
        width: 100%;
      }

      .size-selector {
        margin-bottom: 30px;
      }

      .size-selector label {
        display: block;
        margin-bottom: 10px;
        text-transform: uppercase;
        font-size: 12px;
        letter-spacing: 1px;
      }

      .size-options {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(60px, 1fr));
        gap: 10px;
      }

      .size-option {
        position: relative;
      }

      .size-option input {
        display: none;
      }

      .size-option label {
        display: flex;
        align-items: center;
        justify-content: center;
        height: 45px;
        border: 1px solid #ddd;
        cursor: pointer;
        transition: all 0.3s ease;
      }

      .size-option input:checked + label {
        background: black;
        color: white;
        border-color: black;
      }

      .size-option.sold-out label {
        opacity: 0.5;
        cursor: not-allowed;
        text-decoration: line-through;
      }

@media screen and (max-width: 768px) {
  .gallery-main {
    display: block !important;
    gap: 0 !important;
  }
  
  .product-gallery .swiper-pagination {
    position: relative;
    bottom: 0;
    padding: 15px 0;
    display: flex;
    justify-content: center;
    align-items: center;
  }

  .swiper-pagination-bullet {
    width: 8px;
    height: 8px;
    background: #000;
    opacity: 0.2;
    margin: 0 5px;
  }

  .swiper-pagination-bullet-active {
    opacity: 1;
  }
}
      
     /* Add these new styles */
.cart-item .quantity {
  width: 140px !important;
  height: 44px !important;
  display: flex !important;
  align-items: center !important;
  justify-content: space-between !important;
  border: 1px solid #ddd !important;
  margin: 0 !important;
}

.cart-item .quantity__button {
  width: 44px !important;
  height: 44px !important;
  display: flex !important;
  align-items: center !important;
  justify-content: center !important;
  background: none !important;
  border: none !important;
  font-size: 16px !important;
  cursor: pointer !important;
  padding: 0 !important;
  color: #000 !important;
}

.cart-item .quantity__input {
  width: 52px !important;
  height: 44px !important;
  border: none !important;
  border-left: 1px solid #ddd !important;
  border-right: 1px solid #ddd !important;
  text-align: center !important;
  font-size: 14px !important;
  padding: 0 !important;
  margin: 0 !important;
  background: white !important;
  -moz-appearance: textfield !important;
}

.cart-item .quantity__input::-webkit-outer-spin-button,
.cart-item .quantity__input::-webkit-inner-spin-button {
  -webkit-appearance: none !important;
  margin: 0 !important;
}

.quantity-selector {
  width: 100% !important;
  display: grid !important;
  grid-template-columns: repeat(3, 1fr) !important;
  gap: 10px !important;
  max-width: 300px !important;
  margin: 0 auto !important;
}

.quantity-button {
  width: 100% !important;
  height: 45px !important;
  border: 1px solid #ddd !important;
  background: none !important;
  cursor: pointer !important;
  font-size: 16px !important;
  display: flex !important;
  align-items: center !important;
  justify-content: center !important;
  color: #000 !important;
  transition: all 0.3s ease !important;
}

/ Add to cart button - center it like mobile /
.product-form__submit {
  width: 80% !important;
  max-width: 300px !important;
  margin: 15px auto !important;
  display: block !important;
}

.product-page-wrapper {
  position: relative;
  z-index: 1;
  background: white;
  min-height: 100vh;
  padding-bottom: 100px; 
}

main {
  position: relative;
  min-height: 100vh;
  display: flex;
  flex-direction: column;
}

.product-container {
  flex: 1 0 auto;
  width: 100%;
  max-width: 1600px;
  margin: 0 auto;
  padding: 120px 40px 40px;
}

.accordion {
  width: 100%;
  max-width: 400px;
  margin: 0 auto;
  overflow: visibile;
}

.accordion-item {
  border-bottom: 1px solid #ddd;
  width: 100%;
}

.accordion-button {
  width: 100%;
  padding: 20px 0;
  background: none;
  border: none;
  text-align: center;
  cursor: pointer;
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 10px;
  font-size: 12px;
  text-transform: uppercase;
  letter-spacing: 1px;
}

.accordion-panel {
  display: none;
  padding: 0 20px 20px;
  text-align: center;
  width: 100%;
  box-sizing: border-box;
  overflow: visibile;
}

.size-guide-image {
  max-width: 100%;
  height: auto;
  display: block;
  margin: 0 auto;
}

.icon {
  transition: transform 0.3s ease;
}

.accordion-item.active .icon {
  transform: rotate(45deg);
}

.product-info {
  padding-right: 40px !important; 
  overflow: visibile;
}

.product-details {
  width: 100%;
  overflow: visibile;
}

.product-container {
  min-height: 800px;
}

.product-info {
  min-height: 800px;
  height: auto !important;
  padding-bottom: 100px;
}

@media screen and (max-width: 768px) {
  .product-container {
    min-height: auto;
  }

  .product-info {
    min-height: auto;
    padding-bottom: 40px;
  }
}
      
/ Footer positioning /
footer {
  position: relative !important;
  z-index: 0;
  width: 100%;
  margin-top: auto;
}

/ Fix accordion stacking */
.product-details .accordion {
  position: relative;
  z-index: 1;
}

/ Shipping and Size Guide buttons - match mobile layout */
.product-details .accordion {
  width: 100% !important;
  max-width: 300px !important;
  margin: 0 auto !important;
}

.product-details .accordion-item {
  border-bottom: 1px solid #ddd !important;
  text-align: center !important;
}

.product-details .accordion-header {
  width: 100% !important;
  padding: 20px 0 !important;
  background: none !important;
  border: none !important;
  text-align: center !important;
  cursor: pointer !important;
  display: flex !important;
  justify-content: center !important;
  align-items: center !important;
  font-size: 14px !important;
  text-transform: uppercase !important;
  letter-spacing: 1px !important;
  gap: 10px !important;
}

.product-details .accordion-content {
  display: none !important;
  padding: 0 0 20px !important;
  font-size: 14px !important;
  line-height: 1.6 !important;
  text-align: center !important;
  width: 100% !important;
}
    
  .product-info .quantity {
  width: 80% !important;
  max-width: 300px !important;
  margin: 15px auto !important;
}

.product-info .quantity-selector {
  display: grid !important;
  grid-template-columns: repeat(3, 1fr) !important;
  gap: 8px !important;
  width: 100% !important;
  box-sizing: border-box !important;
}

.product-info .quantity-button {
  width: 100% !important;
  height: 44px !important;
  border: 1px solid #ddd !important;
  background: none !important;
  cursor: pointer !important;
  font-size: 16px !important;
  display: flex !important;
  align-items: center !important;
  justify-content: center !important;
}

.product-info .quantity input {
  width: 100% !important;
  height: 44px !important;
  border: 1px solid #ddd !important;
  text-align: center !important;
}

/ Add to cart button */
.product-info .product-form__submit {
  width: 80% !important;
  max-width: 300px !important;
  margin: 15px auto !important;
  display: block !important;
  height: 44px !important;
  background: black !important;
  color: white !important;
  border: none !important;
  font-size: 11px !important;
  letter-spacing: 1px !important;
}

.product-form-container {
  width: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
}

.product-form-container .quantity {
  width: 80%;
  max-width: 300px;
  margin: 15px auto;
}

.product-form-container .quantity-selector {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  gap: 8px;
  width: 100%;
}

.product-form-container .quantity-button {
  width: 100%;
  height: 44px;
  border: 1px solid #ddd;
  background: none;
  cursor: pointer;
  font-size: 16px;
  display: flex;
  align-items: center;
  justify-content: center;
}

.product-form-container .product-form__submit {
  width: 80%;
  max-width: 300px;
  margin: 15px auto;
  display: block;
  height: 44px;
  background: black;
  color: white;
  border: none;
  font-size: 11px;
  letter-spacing: 1px;
  text-transform: uppercase;
}

.product-form-container .size-options {
  display: flex; /* Use flex for horizontal layout /
  flex-direction: row; / Force horizontal /
  flex-wrap: nowrap; / Prevent wrapping /
  justify-content: center;
  gap: 10px;
  width: fit-content; / Allow container to fit content /
  margin: 0 auto; / Center the container /
}

.product-form-container .size-option {
  width: 60px; / Fixed width /
  flex: 0 0 60px; / Don't grow, don't shrink, stay 60px */
}

.product-form-container .size-option label {
  width: 60px;
  height: 44px;
  display: flex;
  align-items: center;
  justify-content: center;
  border: 1px solid #ddd;
  cursor: pointer;
  transition: all 0.3s ease;
}

.product-form-container .size-option input:checked + label {
  background: black;
  color: white;
  border-color: black;
}
    
@media screen and (max-width: 768px) {
  .cart-item__qty-price {
  display: grid !important;
  grid-template-columns: auto max-content !important;
  align-items: center !important;
  gap: 20px !important;
  width: 100% !important;
  margin-top: 10px !important;
}

.cart-item .quantity {
  width: 140px !important;
  height: 44px !important;
  display: grid !important;
  grid-template-columns: repeat(3, 1fr) !important;
  gap: 0 !important;
  border: 1px solid #ddd !important;
  margin: 0 !important;
}

.cart-item__price {
  font-size: 12px !important;
  font-weight: 400 !important;
  letter-spacing: 0.5px !important;
  white-space: nowrap !important;
  text-align: right !important;
}

.cart-item .quantity__button,
.cart-item .quantitybutton {
  width: 100% !important;
  height: 100% !important;
  border: none !important;
  background: none !important;
  display: flex !important;
  align-items: center !important;
  justify-content: center !important;
  cursor: pointer !important;
  padding: 0 !important;
}

.cart-item .quantity__input,
.cart-item .quantityinput {
  width: 100% !important;
  height: 100% !important;
  border: none !important;
  border-left: 1px solid #ddd !important;
  border-right: 1px solid #ddd !important;
  text-align: center !important;
  font-size: 14px !important;
  padding: 0 !important;
  margin: 0 !important;
  -moz-appearance: textfield !important;
}

@media screen and (max-width: 768px) {
  .cart-item__qty-price {
    grid-template-columns: auto max-content !important;
    gap: 10px !important;
  }

  .cart-item .quantity {
    width: 120px !important;
    height: 36px !important;
  }
}


@media screen and (max-width: 480px) {
  .cart-item .quantity {
    width: 100px !important;
    height: 36px !important;
  }

  .cart-item .quantitybutton {
    width: 32px !important;
    height: 36px !important;
    font-size: 12px !important;
  }

  .cart-item .quantityinput {
    width: 36px !important;
    height: 36px !important;
    font-size: 12px !important;
  }
}

      .add-to-cart {
        width: 100%;
        padding: 18px;
        background: black;
        color: white;
        border: none;
        cursor: pointer;
        text-transform: uppercase;
        letter-spacing: 1px;
        margin-bottom: 40px;
        transition: opacity 0.3s ease;
      }

      .add-to-cart:hover {
        opacity: 0.8;
      }

     .product-details {
  border-top: 1px solid #ddd;
  padding-top: 30px;
  position: relative;
  z-index: 1;
  background: white;
  margin-bottom: 40px;
}

.description {
  margin-bottom: 40px;
  font-size: 14px;
  line-height: 1.6;
}

.accordion-item {
  position: relative;
  z-index: 2;
}

.accordion-content {
  position: relative;
  z-index: 1;
  background: white;
}

    .product-details .accordion {
  width: 100% !important;
  max-width: 300px !important;
  margin: 0 auto !important;
}

.product-details .accordion-item {
  border-bottom: 1px solid #ddd !important;
  text-align: center !important;
}

.product-details .accordion-header {
  width: 100% !important;
  padding: 20px 0 !important;
  background: none !important;
  border: none !important;
  text-align: center !important;
  cursor: pointer !important;
  display: flex !important;
  justify-content: center !important;
  align-items: center !important;
  font-size: 14px !important;
  text-transform: uppercase !important;
  letter-spacing: 1px !important;
  gap: 10px !important;
}

.product-details .accordion-content {
  display: none !important;
  padding: 0 0 20px !important;
  font-size: 14px !important;
  line-height: 1.6 !important;
  text-align: center !important;
  width: 100% !important;
}

.accordion-item.active .accordion-content {
  display: block !important;
}

.accordion-item.active .accordion-content {
  display: block !important;
}

/* Add the new code right here */
.accordion-button,
.drawer__close,
.cart-item__remove,
.accordion-button .icon,
.drawer__close svg,
.cart-item__remove svg {
  color: black !important;
  fill: black !important;
  stroke: black !important;
  -webkit-text-fill-color: black !important;
  -webkit-tap-highlight-color: transparent !important;
}

.drawer__close path,
.cart-item__remove path {
  stroke: black !important;
}

* {
  -webkit-tap-highlight-color: transparent !important;
}

.accordion-button {
  -webkit-appearance: none !important;
  appearance: none !important;
  text-decoration: none !important;
}
  
.accordion-item.active .icon {
  transform: rotate(45deg) !important;
}

@media screen and (max-width: 768px) {
  .product-details .accordion-header {
    text-align: center !important;
    padding: 15px 0 !important;
  }
  
  .product-details .accordion-content {
    text-align: center !important;
    padding: 15px !important;
  }
}

      @media screen and (max-width: 1024px) {
        .product-container {
          gap: 40px;
          padding: 100px 20px 40px;
        }
      }

     .product-container {
  display: flex;
  margin: 0 auto;
  gap: 100px;
  padding: 120px 40px 40px 40px;
  max-width: 1600px;
}

.product-gallery {
  flex: 1.2;
  position: relative;
}

.gallery-main {
  display: flex;
  flex-direction: column;
  gap: 20px;
}

.gallery-image img {
  width: 100%;
  height: auto;
  display: block;
}

.product-info {
  flex: 0.8;
  padding: 0;
  position: relative;
  align-self: flex-start;
  overflow-y: visible;
}

.product-info::-webkit-scrollbar {
  width: 5px;
}

.product-info::-webkit-scrollbar-track {
  background: #f1f1f1;
}

.product-info::-webkit-scrollbar-thumb {
  background: #888;
}

.product-info h1 {
  font-size: 24px;
  margin-bottom: 10px;
  text-transform: uppercase;
  letter-spacing: 1px;
}

.price {
  font-size: 20px;
  margin-bottom: 30px;
}

.size-selector {
  margin-bottom: 30px;
}

.size-selector label {
  display: block;
  margin-bottom: 10px;
  text-transform: uppercase;
  font-size: 12px;
  letter-spacing: 1px;
}

.size-options {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(60px, 1fr));
  gap: 10px;
}

.size-option {
  position: relative;
}

.size-option input {
  display: none;
}

.size-option label {
  display: flex;
  align-items: center;
  justify-content: center;
  height: 45px;
  border: 1px solid #ddd;
  cursor: pointer;
  transition: all 0.3s ease;
}

.size-option input:checked + label {
  background: black;
  color: white;
  border-color: black;
}

.size-option.sold-out label {
  opacity: 0.5;
  cursor: not-allowed;
  text-decoration: line-through;
}

.quantity {
  margin-bottom: 30px;
}

.quantity-label {
  margin-bottom: 15px;
}

.quantity-label label {
  display: block;
  text-transform: uppercase;
  font-size: 12px;
  letter-spacing: 1px;
  color: #777;
}

.quantity-selector {
  display: flex;
  align-items: center;
  border: 1px solid #ddd;
  width: 140px;
}

.quantity-button {
  width: 40px;
  height: 40px;
  border: none;
  background: none;
  cursor: pointer;
  font-size: 16px;
  display: flex;
  align-items: center;
  justify-content: center;
  color: #000;
  transition: background-color 0.3s ease;
}

.quantity-button:hover {
  background-color: #f5f5f5;
}

.quantity input {
  width: 60px;
  height: 40px;
  border: none;
  border-left: 1px solid #ddd;
  border-right: 1px solid #ddd;
  text-align: center;
  font-size: 14px;
  -moz-appearance: textfield;
  background: white;
}

.product-form__submit {
  width: 100%;
  height: 44px;
  background: black;
  color: white;
  border: none;
  cursor: pointer;
  text-transform: uppercase;
  letter-spacing: 1px;
  font-size: 11px;
  margin-bottom: 40px;
  transition: opacity 0.3s ease;
}

.product-form__submit:hover {
  opacity: 0.8;
}



@media screen and (max-width: 768px) {
  .product-details .accordion-header {
    justify-content: center !important;
    padding: 15px 0 !important;
  }
  
  .product-details .accordion-content {
    text-align: center !important;
    padding: 15px !important;
  }
  
  .product-details .accordion {
    max-width: 300px !important;
    margin: 0 auto !important;
  }


@media screen and (max-width: 768px) {
  .product-container {
    flex-direction: column !important;
 padding: 40px 0 0 0 !important;
   gap: 20px !important;
    margin-top: 35px !important;
    width: 100% !important;
  }
  

  .product-gallery {
    margin: 0 !important;
    padding: 0 !important;
    width: 100% !important;
  }

  .gallery-main {
    gap: 2px !important;
  }

  .product-info {
    position: relative !important;
    top: 0 !important;
    height: auto !important;
    overflow: visible !important;
    padding: 20px !important;
    display: flex !important;
    flex-direction: column !important;
    align-items: center !important;
    width: 100% !important;
    max-width: 100% !important;
    box-sizing: border-box !important;
  }

.product-info h1 {
    font-size: 14px !important;
    margin: 20px 0 8px 0 !important;
    text-align: center !important;
    width: 100% !important;
    display: block !important;
  }

  .price {
    font-size: 14px !important;
    margin: 0 0 20px 0 !important;
    text-align: center !important;
    width: 100% !important;
    display: block !important;
  }

  /* Product form elements */
  form {
    display: flex !important;
    flex-direction: column !important;
    align-items: center !important;
    width: 100% !important;
    gap: 25px !important;
  }
.quantity {
    display: flex !important;
    flex-direction: column !important;
    align-items: center !important;
    gap: 10px !important;
    width: 80% !important;
    max-width: 300px !important;
    margin: 15px auto !important;
}

.quantity-label {
    text-align: center !important;
    width: 100% !important;
    margin-bottom: 5px !important;
    font-size: 11px !important;
    text-transform: uppercase !important;
    display: block !important;
}

.quantity-selector {
    width: 100% !important;
    display: flex !important;
    justify-content: space-between !important;
    height: 44px !important;
    margin: 0 !important;
}

.quantity input {
    width: 34% !important;
    height: 44px !important;
    border-left: 1px solid #ddd !important;
    border-right: 1px solid #ddd !important;
}

.quantity-button {
    width: 33% !important;
    height: 44px !important;
}
 /* Standardize all button containers */
  .size-selector,
  .quantity,
  .product-form__submit {
    width: 80% !important;
    max-width: 300px !important;
    margin: 15px auto !important;
  }

  /* Size selector buttons */
  /* Replace with this new code */
.size-options {
    display: grid !important;
    grid-template-columns: repeat(4, 1fr) !important;
    gap: 8px !important;
    width: 100% !important;
    box-sizing: border-box !important;
}

.size-option {
    width: 100% !important;
}

.size-option label {
    width: 100% !important;
    height: 44px !important;
    display: flex !important;
    align-items: center !important;
    justify-content: center !important;
}


 .quantity {
    margin: 20px auto !important;
    width: 100% !important;
    display: flex !important;
    flex-direction: column !important;
    align-items: center !important;
  }

  .quantity-label {
    text-align: center !important;
    width: 100% !important;
  }

  .quantity-selector {
    display: flex !important;
    width: 100% !important;
    height: 44px !important;
    border: 1px solid #ddd !important;
    margin: 0 auto !important;
  }

  .quantity-button {
    width: 44px !important;
    height: 44px !important;
    flex-shrink: 0 !important;
    display: flex !important;
    align-items: center !important;
    justify-content: center !important;
  }

  .quantity input {
    flex-grow: 1 !important;
    width: auto !important;
    height: 44px !important;
  }

   .product-form__submit {
    max-width: 300px !important;
    margin: 0 auto 20px !important;
    height: 44px !important;
    font-size: 11px !important;
    letter-spacing: 1px !important;
    width: 100% !important;
    display: block !important;
  }


 .product-details {
    padding: 20px !important;
    text-align: center !important;
    width: 100% !important;
    box-sizing: border-box !important;
  }

  .description {
    text-align: center !important;
    margin: 0 auto !important;
    max-width: 300px !important;
  }

  .accordion {
    max-width: 300px !important;
    margin: 0 auto !important;
  }
}

   .accordion-header {
    font-size: 12px !important;
    padding: 15px 0 !important;
    justify-content: center !important;
    text-align: center !important;
    width: 100% !important;
  }

 .accordion-content {
    font-size: 12px !important;
    line-height: 1.5 !important;
    text-align: center !important;
    padding: 15px !important;
    width: 100% !important;
  }

   /* Reset any potential conflicting styles */
  .product-info > *,
  .product-details > * {
    margin-left: auto !important;
    margin-right: auto !important;
    text-align: center !important;
  }
}

   <script>
  // Quantity selector
  document.querySelectorAll('.quantity-button').forEach(button => {
    button.addEventListener('click', function() {
      const input = this.parentNode.querySelector('input');
      const value = parseInt(input.value);
      
      if (this.classList.contains('minus')) {
        if (value > 1) input.value = value - 1;
      } else {
        input.value = value + 1;
      }
    });
  });

  // New Accordion Function
  function toggleAccordion(button) {
  // Get the parent accordion item
  const accordionItem = button.closest('.accordion-item');

  // Get the content for this accordion
  const content = accordionItem.querySelector('.accordion-content');

  // Get all accordion items
  const allAccordionItems = document.querySelectorAll('.accordion-item');

  // Close all other accordions
  allAccordionItems.forEach(item => {
    if (item !== accordionItem && item.classList.contains('active')) {
      item.classList.remove('active');
      const otherContent = item.querySelector('.accordion-content');
      otherContent.style.display = 'none';
      const otherIcon = item.querySelector('.icon');
      if (otherIcon) {
        otherIcon.style.transform = 'rotate(0deg)';
      }
    }
  });

  // Toggle current accordion
  const isActive = accordionItem.classList.contains('active');

  if (isActive) {
    // Close this accordion
    accordionItem.classList.remove('active');
    content.style.display = 'none';
    const icon = button.querySelector('.icon');
    if (icon) {
      icon.style.transform = 'rotate(0deg)';
    }
  } else {
    // Open this accordion
    accordionItem.classList.add('active');
    content.style.display = 'block';
    const icon = button.querySelector('.icon');
    if (icon) {
      icon.style.transform = 'rotate(45deg)';
    }
  }
}
</script>
<style>
#MainContent {
  width: 100%;
  overflow-x: hidden;
  position: relative;
}

.product-page-wrapper {
  width: 100%;
  position: relative;
  overflow: hidden;
}

.product-container {
  width: 100%;
  max-width: 1600px;
  margin: 0 auto;
  display: flex;
  flex-wrap: wrap;
  padding: 120px 40px 40px;
  box-sizing: border-box;
}

.product-gallery {
  flex: 1.2;
  width: 100%;
  box-sizing: border-box;
}

.product-info {
  flex: 0.8;
  width: 100%;
  box-sizing: border-box;
  padding: 0 40px;
}

#shopify-section-footer {
  width: 100% !important;
  max-width: 1600px !important;
  margin: 0 auto !important;
  clear: both !important;
  float: none !important;
  position: relative !important;
  display: block !important;
  overflow-x: hidden !important;
  padding: 0 40px !important;
  box-sizing: border-box !important;
}

/* Apply the same max-width and padding to footer content */
#shopify-section-footer > div {
  max-width: 1600px !important;
  margin: 0 auto !important;
  width: 100% !important;
}

.product-details {
  width: 100% !important;
  margin-bottom: 0 !important;
  overflow-x: hidden !important;
}

.accordion {
  margin-bottom: 40px !important;
  max-width: 100% !important;
}

@media screen and (max-width: 768px) {
  .product-container {
    padding: 40px 20px;
    flex-direction: column;
  }

  .product-info {
    padding: 20px;
  }
}

/* Fix overflow issues */
body {
  overflow-x: hidden;
  width: 100%;
}

.footer {
  width: 100%;
  overflow: hidden;
}

</style>       
        
   {% else %}
  {% if template == 'page.about' or page.handle == 'about-us' %}
    <div class="about-duality-container">
      <div class="about-hero">
        <div class="about-hero__overlay"></div>
        <div class="about-hero__content">
          <h1 class="about-hero__title">About Duality</h1>
        </div>
      </div>
      <div class="about-sections">
        <div class="about-section about-section--intro">
          <div class="about-section__content">
            <p class="about-section__text">
              Duality was born from the shit no one talks about.
            </p>
          </div>
        </div>
        <div class="about-section about-section--reality">
          <div class="about-section__content">
            <div class="about-section__text-block">
              <p>The days where your head's a mess but you show up anyway. The workouts that feel pointless but you do them. The pressure to be locked in 24/7 while you're barely holding it together. We live in that tension—the push and pull between who you are and who you're trying to be.</p>
            </div>
          </div>
        </div>
        <div class="about-section about-section--authenticity">
          <div class="about-section__content">
            <p class="about-section__text">
              This isn't a brand built on fake motivation or perfect routines. It's built on honesty, struggle, discipline, and the quiet work that no one claps for. We make clothing that holds that weight. That feels like you. That reminds you why you started.
            </p>
          </div>
        </div>
        
        <div class="about-section about-section--manifesto">
          <div class="about-section__content">
            <div class="about-section__highlight about-section__highlight--large">
              <p>You don't have to have it all figured out. Just don't quit.</p>
              <p class="about-section__signature">This is Duality</p>
            </div>
          </div>
        </div>
      </div>
    </div>
    <style>
    .about-duality-container {
      width: 100%;
      background-color: #111;
      color: #fff;
      font-family: var(--font-body-family);
      overflow: hidden;
    }
    /* Hero Section */
    .about-hero {
      position: relative;
      height: 70vh;
      min-height: 400px;
      display: flex;
      align-items: center;
      justify-content: center;
      overflow: hidden;
      background-color: #111;
      margin-bottom: 4rem;
    }
    .about-hero__overlay {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: radial-gradient(circle, rgba(0,0,0,0.4) 0%, rgba(0,0,0,0.8) 100%);
      z-index: 1;
    }
    .about-hero__content {
      position: relative;
      z-index: 2;
      text-align: center;
      padding: 0 20px;
    }
    .about-hero__title {
      font-size: 4rem;
      font-weight: 800;
      margin: 0;
      text-transform: uppercase;
      letter-spacing: 2px;
      color: #fff;
    }
    @media screen and (max-width: 768px) {
      .about-hero__title {
        font-size: 2.5rem;
      }
    }
    /* About Sections */
    .about-sections {
      max-width: 1000px;
      margin: 0 auto;
      padding: 0 20px;
    }
    .about-section {
      margin-bottom: 8rem;
      position: relative;
      opacity: 0;
      transform: translateY(20px);
      transition: opacity 0.6s ease, transform 0.6s ease;
    }
    .about-section.visible {
      opacity: 1;
      transform: translateY(0);
    }
    .about-section__content {
      position: relative;
    }
    .about-section__text {
      font-size: 1.25rem;
      line-height: 1.6;
      margin-bottom: 1.5rem;
    }
    .about-section__text-block {
      margin-bottom: 3rem;
    }
    .about-section__text-block p {
      font-size: 1.5rem;
      line-height: 1.6;
      margin-bottom: 1.5rem;
    }
    .about-section__highlight {
      padding: 3rem 2rem;
      margin: 2rem 0;
      background-color: #1a1a1a;
      border-left: 4px solid #555;
    }
    .about-section__highlight p {
      font-size: 1.8rem;
      line-height: 1.5;
      font-weight: 500;
    }
    .about-section__highlight--large p {
      font-size: 2.5rem;
      line-height: 1.3;
      font-weight: 700;
      margin-bottom: 1.5rem;
    }
    .about-section__signature {
      margin-top: 3rem;
      font-size: 1.4rem !important;
      font-style: italic;
      opacity: 0.8;
    }
    /* Intro Section */
    .about-section--intro {
      text-align: center;
    }
    .about-section--intro .about-section__text {
      font-size: 2.5rem;
      font-weight: 600;
      max-width: 800px;
      margin: 0 auto;
    }
    /* Reality Section */
    .about-section--reality {
      margin-top: 6rem;
    }
    /* Authenticity Section */
    .about-section--authenticity {
      margin: 8rem 0;
    }
    /* Manifesto Section */
    .about-section--manifesto {
      text-align: center;
      margin-bottom: 6rem;
    }
    .about-section--manifesto .about-section__highlight {
      background-color: transparent;
      border: none;
      padding: 2rem 0;
    }
    /* Responsive Styles */
    @media screen and (max-width: 768px) {
      .about-hero {
        height: 50vh;
      }
      
      .about-section__text,
      .about-section__text-block p {
        font-size: 1.1rem;
      }
      
      .about-section--intro .about-section__text {
        font-size: 1.5rem;
      }
      
      .about-section__highlight p {
        font-size: 1.4rem;
      }
      
      .about-section__highlight--large p {
        font-size: 1.8rem;
      }
    }
    </style>
    <script>
    document.addEventListener('DOMContentLoaded', function() {
      // Scroll animation for content sections
      const fadeElements = document.querySelectorAll('.about-section');
      
      // Detect when elements enter viewport and add visible class
      const observerOptions = {
        threshold: 0.2,
        rootMargin: '0px 0px -50px 0px'
      };
      
      const observer = new IntersectionObserver(function(entries, observer) {
        entries.forEach(entry => {
          if (entry.isIntersecting) {
            entry.target.classList.add('visible');
            observer.unobserve(entry.target);
          }
        });
      }, observerOptions);
      
      fadeElements.forEach(element => {
        observer.observe(element);
      });
      
      // Add initial animation to the first section
      setTimeout(function() {
        const firstSection = document.querySelector('.about-section--intro');
        if (firstSection) {
          firstSection.classList.add('visible');
        }
      }, 300);
    });
    </script>
  {% else %}
  {% if template == 'page.lookbook' or page.handle == 'lookbook' %}
  <style>
    /* Fix for horizontal scrollbar */
  .header-layout {
  color: black !important;
}
    
.nav-link {
  color: black !important;
}
    
.toggle-line {
  background-color: black !important;
}

.cart-icon svg {
  color: black !important;
  stroke: black !important;
}
    
    body, html {
      overflow-x: hidden;
      width: 100%;
      max-width: 100%;
      margin: 0;
      padding: 0;
      box-sizing: border-box;
      background-color: white;
    }
    
    /* Lookbook Styles */
    .lookbook-container {
      width: 100%;
      max-width: 100%;
      margin: 0 auto;
      padding: 80px 20px;
      background-color: white;
      color: #fff;
      box-sizing: border-box;
      overflow: hidden;
    }

    .lookbook-grid {
      display: grid;
      grid-template-columns: repeat(12, 1fr);
      grid-auto-rows: minmax(200px, auto);
      gap: 15px;
      margin-bottom: 80px;
      width: 100%;
      max-width: 1600px;
      margin-left: auto;
      margin-right: auto;
      box-sizing: border-box;
    }

.lookbook-item {
  position: relative;
  overflow: hidden;
  background-color: #f5f5f5;
  opacity: 1;
  box-sizing: border-box;
}

    .lookbook-item img {
      width: 100%;
      height: 100%;
      object-fit: cover;
      transition: transform 0.5s ease;
    }

    .lookbook-item:hover img {
      transform: scale(1.05);
    }

    /* Grid item sizes - staggered layout */
    .item-1 {
      grid-column: 1 / span 6;
      grid-row: 1 / span 2;
    }

    .item-2 {
      grid-column: 7 / span 6;
      grid-row: 1 / span 1;
    }

    .item-3 {
      grid-column: 7 / span 3;
      grid-row: 2 / span 1;
    }

    .item-4 {
      grid-column: 10 / span 3;
      grid-row: 2 / span 1;
    }

    .item-5 {
      grid-column: 1 / span 4;
      grid-row: 3 / span 1;
    }

    .item-6 {
      grid-column: 5 / span 8;
      grid-row: 3 / span 2;
    }

    .item-7 {
      grid-column: 1 / span 4;
      grid-row: 4 / span 2;
    }

    .item-8 {
      grid-column: 5 / span 4;
      grid-row: 5 / span 1;
    }

    .item-9 {
      grid-column: 9 / span 4;
      grid-row: 5 / span 2;
    }

    .item-10 {
      grid-column: 1 / span 8;
      grid-row: 6 / span 2;
    }

    .item-11 {
      grid-column: 9 / span 4;
      grid-row: 7 / span 1;
    }

    .item-12 {
      grid-column: 1 / span 5;
      grid-row: 8 / span 2;
    }

    .item-13 {
      grid-column: 6 / span 7;
      grid-row: 8 / span 1;
    }

    /* Responsive adjustments */
    @media screen and (max-width: 992px) {
      .lookbook-grid {
        grid-template-columns: repeat(6, 1fr);
      }
      
      .item-1 {
        grid-column: 1 / span 6;
        grid-row: auto;
      }
      
      .item-2 {
        grid-column: 1 / span 3;
        grid-row: auto;
      }
      
      .item-3 {
        grid-column: 4 / span 3;
        grid-row: auto;
      }
      
      .item-4 {
        grid-column: 1 / span 6;
        grid-row: auto;
      }
      
      .item-5 {
        grid-column: 1 / span 3;
        grid-row: auto;
      }
      
      .item-6 {
        grid-column: 4 / span 3;
        grid-row: auto;
      }
      
      .item-7 {
        grid-column: 1 / span 6;
        grid-row: auto;
      }
      
      .item-8, .item-9, .item-10, .item-11, .item-12, .item-13 {
        grid-column: span 3;
        grid-row: auto;
      }
    }

    @media screen and (max-width: 576px) {
      .lookbook-grid {
        grid-template-columns: 1fr;
        gap: 10px;
      }
      
      .lookbook-item {
        grid-column: 1 / span 1 !important;
        grid-row: auto !important;
      }
    }
    
    /* Fix for any content wrappers in the theme */
    .page-width, .page-container, main, .main-content, .content-container, #MainContent, #shopify-section-template--* {
      width: 100% !important;
      max-width: 100% !important;
      padding-left: 0 !important;
      padding-right: 0 !important;
      margin-left: 0 !important;
      margin-right: 0 !important;
      overflow-x: hidden !important;
      box-sizing: border-box !important;
    }
  </style>
  
  <div class="lookbook-container">
    <div class="lookbook-grid">
      <!-- REPLACE THE BELOW IMG SRC URLs WITH YOUR ACTUAL IMAGE URLS -->
      <!-- You'll need to upload your 13 images to Shopify and copy their URLs here -->
      
      <div class="lookbook-item item-1">
        <img src="{{ 'IMG_2027.JPG' | asset_url }}" alt="Lookbook image 1">
      </div>
      <div class="lookbook-item item-2">
        <img src="{{ 'IMG_2030.JPG' | asset_url }}" alt="Lookbook image 2">
      </div>
      <div class="lookbook-item item-3">
        <img src="{{ 'IMG_2031.JPG' | asset_url }}" alt="Lookbook image 3">
      </div>
      <div class="lookbook-item item-4">
        <img src="{{ 'IMG_2034.JPG' | asset_url }}" alt="Lookbook image 4">
      </div>
      <div class="lookbook-item item-5">
        <img src="{{ 'IMG_2033.JPG' | asset_url }}" alt="Lookbook image 5">
      </div>
      <div class="lookbook-item item-6">
        <img src="{{ 'IMG_2038.JPG' | asset_url }}" alt="Lookbook image 6">
      </div>
      <div class="lookbook-item item-7">
        <img src="{{ 'IMG_2045.JPG' | asset_url }}" alt="Lookbook image 7">
      </div>
      <div class="lookbook-item item-8">
        <img src="{{ 'IMG_2042.JPG' | asset_url }}" alt="Lookbook image 8">
      </div>
      <div class="lookbook-item item-9">
        <img src="{{ 'IMG_2043.JPG' | asset_url }}" alt="Lookbook image 9">
      </div>
      <div class="lookbook-item item-10">
        <img src="{{ 'IMG_2041.JPG' | asset_url }}" alt="Lookbook image 10">
      </div>
      <div class="lookbook-item item-11">
        <img src="{{ 'IMG_2025.JPG' | asset_url }}" alt="Lookbook image 11">
      </div>
      <div class="lookbook-item item-12">
        <img src="{{ 'IMG_2026.JPG' | asset_url }}" alt="Lookbook image 12">
      </div>
      <div class="lookbook-item item-13">
        <img src="{{ 'IMG_2044.JPG' | asset_url }}" alt="Lookbook image 13">
      </div>
    </div>
  </div>
{% else %}
  {{ content_for_layout }}
{% endif %}
{% endif %}
{% endif %}
</main> 

{% sections 'footer-group' %}
<style>
{% if template == 'product' %}
  .product-page-wrapper {
  position: relative;
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  background: white;
}

.product-container {
  flex: 1 0 auto;
  width: 100%;
  max-width: 1600px;
  margin: 0 auto;
  padding: 120px 40px 40px;
  display: flex;
  gap: 100px;
}

/* Product info container */
.product-info {
  flex: 0.8;
  padding: 0 40px;
  position: relative;
  margin-bottom: 40px; /* Add space before footer */
}

/* Footer positioning */
.footer {
  margin-top: auto;
  width: 100%;
  position: relative;
  z-index: 1;
  background: white;
}

/* Mobile responsiveness */
@media screen and (max-width: 768px) {
  .product-container {
    padding: 40px 20px;
    gap: 40px;
    flex-direction: column;
  }

  .product-info {
    padding: 0 20px;
  }
}
{% endif %}
</style>
  
<ul hidden>
      <li id="a11y-refresh-page-message">{{ 'accessibility.refresh_page' | t }}</li>
      <li id="a11y-new-window-message">{{ 'accessibility.link_messages.new_window' | t }}</li>
    </ul>

    <script>
      // Background Image System
      const backgrounds = [
        '/path-to-your-image-1.jpg',
        '/path-to-your-image-2.jpg',
        '/path-to-your-image-3.jpg'
      ];

      let currentBg = 0;
      const bgElement = document.querySelector('.fullscreen-background');

      function changeBackground() {
        bgElement.style.opacity = '0';
        setTimeout(() => {
          bgElement.style.backgroundImage = `url(${backgrounds[currentBg]})`;
          bgElement.style.opacity = '1';
          currentBg = (currentBg + 1) % backgrounds.length;
        }, 500);
      }

      // Initial background
      bgElement.style.backgroundImage = `url(${backgrounds[0]})`;
      // Change background every 5 seconds
      setInterval(changeBackground, 5000);

      // Navigation Toggle
      document.querySelector('.represent-nav-toggle').addEventListener('click', function() {
        document.querySelector('.represent-nav-menu').classList.toggle('active');
      });

      // Close menu when clicking outside
      document.addEventListener('click', function(event) {
        const nav = document.querySelector('.represent-nav');
        const menu = document.querySelector('.represent-nav-menu');
        if (!nav.contains(event.target) && menu.classList.contains('active')) {
          menu.classList.remove('active');
        }
      });

      // Custom cursor movement
      document.addEventListener('mousemove', function(e) {
        var cursor = document.getElementById('custom-cursor');
        cursor.style.left = e.pageX + 'px';
        cursor.style.top = e.pageY + 'px';
      });

      // Your existing scripts
      window.shopUrl = '{{ request.origin }}';
      window.routes = {
        cart_add_url: '{{ routes.cart_add_url }}',
        cart_change_url: '{{ routes.cart_change_url }}',
        cart_update_url: '{{ routes.cart_update_url }}',
        cart_url: '{{ routes.cart_url }}',
        predictive_search_url: '{{ routes.predictive_search_url }}'
      };

      window.cartStrings = {
        error: `{{ 'sections.cart.cart_error' | t }}`,
        quantityError: `{{ 'sections.cart.cart_quantity_error_html' | t: quantity: '[quantity]' }}`
      }

      window.variantStrings = {
        addToCart: `{{ 'products.product.add_to_cart' | t }}`,
        soldOut: `{{ 'products.product.sold_out' | t }}`,
        unavailable: `{{ 'products.product.unavailable' | t }}`,
        unavailable_with_option: `{{ 'products.product.value_unavailable' | t: option_value: '[value]' }}`,
      }

      window.accessibilityStrings = {
        imageAvailable: `{{ 'products.product.media.image_available' | t: index: '[index]' }}`,
        shareSuccess: `{{ 'general.share.success_message' | t }}`,
        pauseSlideshow: `{{ 'sections.slideshow.pause_slideshow' | t }}`,
        playSlideshow: `{{ 'sections.slideshow.play_slideshow' | t }}`,
      }
    </script>

{% if settings.on_card_border_hover %}
        <script>
          const cardWrappers = document.querySelectorAll('.card-wrapper');

          cardWrappers.forEach((cardWrapper) => {
            const cardInner = cardWrapper.querySelector('.card__inner');

            cardWrapper.addEventListener('mouseover', function() {
              cardInner.style.outline = '{{ settings.card_border_size }}px solid {{ settings.card_border_color }}';
              cardInner.style.borderRadius = '{{ settings.card_border_radius }}px';
            });

            cardWrapper.addEventListener('mouseout', function() {
              cardInner.style.outline = 'none';
            });
          });
        </script>
    {% endif %}

    {%- if settings.predictive_search_enabled -%}
      <script src="{{ 'predictive-search.js' | asset_url }}" defer="defer"></script>
    {%- endif -%}

    {% section 'audio-player' %}

<script>
  const header = document.querySelector('.header-layout');

  window.addEventListener('scroll', () => {
    if (window.pageYOffset === 0) {
      // Only show header when at the very top
      header.style.transform = 'translateY(0)';
      header.style.opacity = '1';
    } else {
      // Hide header when scrolling down at all
      header.style.transform = 'translateY(-100%)';
      header.style.opacity = '0';
    }
  });
</script>
      
    <!-- Add smooth scrolling for better user experience -->
    <style>
      html {
        scroll-behavior: smooth;
      }
      
      /* Ensure background images cover full viewport */
      .fullscreen-background {
        will-change: transform;
        backface-visibility: hidden;
      }
      
      /* Add fade effect to page transitions */
      .content-for-layout {
        animation: fadeIn 0.5s ease-in;
      }
      
      @keyframes fadeIn {
        from { opacity: 0; }
        to { opacity: 1; }
      }
      
      /* Improve menu transition */
      .represent-nav-menu {
        backdrop-filter: blur(10px);
        -webkit-backdrop-filter: blur(10px);
      }
      
      /* Ensure content stays above background */
      main, header, footer {
        position: relative;
        z-index: 1;
      }
    </style>


<script>
class CartDrawer extends HTMLElement {
  constructor() {
    super();
    this.bindEvents();
  }

  bindEvents() {
    // Click outside to close
    this.addEventListener('click', (e) => {
      if (e.target === this.querySelector('#CartDrawer')) {
        this.close();
      }
    });

    // Close button
    const closeButton = this.querySelector('.drawer__close');
    if (closeButton) {
      closeButton.addEventListener('click', () => this.close());
    }

    // Continue shopping button
    const continueButton = this.querySelector('.continue-shopping');
    if (continueButton) {
      continueButton.addEventListener('click', () => this.close());
    }

    // Escape key
    document.addEventListener('keyup', (e) => {
      if (e.key === 'Escape') {
        this.close();
      }
    });

    // Bind quantity buttons
    this.bindQuantityButtons();

    // Bind remove buttons
    this.bindRemoveButtons();

    // Prevent clicks inside drawer from closing it
    const drawer = this.querySelector('.drawerinner');
    if (drawer) {
      drawer.addEventListener('click', (e) => {
        e.stopPropagation();
      });
    }
  }

  open() {
  const drawer = this.querySelector('#CartDrawer');
  const chatWidget = document.querySelector('.chatbot-widget');
  
  if (drawer) {
    drawer.classList.add('active');
    document.body.style.overflow = 'hidden';
    // Hide chat widget
    if (chatWidget) {
      chatWidget.style.display = 'none';
    }
  }
}

close() {
  const drawer = this.querySelector('#CartDrawer');
  const chatWidget = document.querySelector('.chatbot-widget');
  
  if (drawer) {
    drawer.classList.remove('active');
    document.body.style.overflow = '';
    // Show chat widget
    if (chatWidget) {
      chatWidget.style.display = 'block';
    }
  }
}

  bindQuantityButtons() {
    this.querySelectorAll('.quantity__button, .quantitybutton').forEach(button => {
      button.addEventListener('click', () => {
        const input = button.parentNode.querySelector('input');
        const value = parseInt(input.value);
        const line = input.dataset.index;
        
        let newValue = value;
        if (button.name === 'minus') {
          newValue = Math.max(0, value - 1);
        } else if (button.name === 'plus') {
          newValue = value + 1;
        }

        fetch('/cart/change.js', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({
            line: parseInt(line),
            quantity: newValue
          })
        })
        .then(response => response.json())
        .then(cart => {
          if (newValue === 0) {
            updateCartContents();
          } else {
            input.value = newValue;
            updateCartContents();
            // Update item price
            const priceElement = button.closest('.cart-itemqty-price').querySelector('.cart-item__price');
            const itemPrice = cart.items[line - 1]?.final_line_price || 0;
            priceElement.textContent = formatMoney(itemPrice);
            // Update cart total
            const subtotalElement = document.querySelector('.cart-subtotal span:last-child');
            if (subtotalElement) {
              subtotalElement.textContent = formatMoney(cart.total_price);
            }
          }
        })
        .catch(error => console.error('Error:', error));
      });
    });
  }

  bindRemoveButtons() {
    this.querySelectorAll('.cart-item__remove').forEach(button => {
      button.addEventListener('click', () => {
        const line = button.dataset.index;
        fetch('/cart/change.js', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({
            line: parseInt(line),
            quantity: 0
          })
        })
        .then(response => response.json())
        .then(() => {
          updateCartContents();
        })
        .catch(error => console.error('Error:', error));
      });
    });
  }

  formatMoney(cents) {
    return (cents/100).toLocaleString('en-US', {
      style: 'currency',
      currency: 'USD'
    });
  }
}

customElements.define('cart-drawer', CartDrawer);

document.addEventListener('DOMContentLoaded', function() {
  const cartTrigger = document.querySelector('[data-drawer-trigger]');
  const cartDrawer = document.querySelector('cart-drawer');
  const cartOverlay = document.getElementById('CartDrawer-Overlay');

  if (cartTrigger && cartDrawer) {
    cartTrigger.addEventListener('click', function(e) {
      e.preventDefault();
      cartDrawer.open();
    });

    // Close on overlay click
    cartOverlay.addEventListener('click', function() {
      cartDrawer.close();
    });

    // Close on escape key
    document.addEventListener('keyup', function(e) {
      if (e.key === 'Escape') {
        cartDrawer.close();
      }
    });
  }

  // Quick Add functionality
  document.querySelectorAll('.size-selector-popup .size-option').forEach(option => {
    option.addEventListener('click', function(e) {
      e.stopPropagation();
      
      if (this.classList.contains('unavailable')) return;
      
      const variantId = this.getAttribute('data-variant-id');
      const sizeOption = this;
      
      // Add loading state
      sizeOption.classList.add('loading');
      
      // First open the cart drawer
      if (cartDrawer) {
        cartDrawer.open();
      }

      // Then add to cart
      fetch('/cart/add.js', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({
          items: [{
            id: variantId,
            quantity: 1
          }]
        })
      })
      .then(response => response.json())
      .then(data => {
        sizeOption.classList.remove('loading');
        updateCartContents();
      })
      .catch(error => {
        console.error('Error:', error);
        sizeOption.classList.remove('loading');
      });
    });
  });
});

function addToCartAndOpenDrawer(form) {
  event.preventDefault();
  
  const cartDrawer = document.querySelector('cart-drawer');
  const chatWidget = document.querySelector('.chatbot-widget');
  
  if (cartDrawer) {
    cartDrawer.open();
    // Hide chat widget when cart opens
    if (chatWidget) {
      chatWidget.style.display = 'none';
    }
  }
  
  fetch('/cart/add.js', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/x-www-form-urlencoded'
    },
    body: new URLSearchParams(new FormData(form))
  })
  .then(response => response.json())
  .then(item => {    
    updateCartContents();
  })
  .catch((error) => {
    console.error('Error:', error);
  });
  
  return false;
}

function updateCartContents() {
  fetch('/cart.js')
    .then(response => response.json())
    .then(cart => {
      const cartItemsContainer = document.querySelector('.cart-items');
      
      if (cartItemsContainer) {
        if (cart.item_count === 0) {
          cartItemsContainer.innerHTML = `
            <div class="cart-empty">
              <p>Your cart is empty</p>
              <a href="/collections/all" class="browse-products">Browse Products</a> <!-- Always show this when cart is empty -->
            </div>
          `;
          const cartFooter = document.querySelector('.cart-footer');
          if (cartFooter) cartFooter.style.display = 'none';

          // Hide cart item count if the cart is empty
          const cartItemCount = document.getElementById('cart-item-count');
          if (cartItemCount) {
            cartItemCount.style.display = 'none'; // Hide item count when cart is empty
          }
        } else {
          let cartHTML = '';
          cart.items.forEach((item, index) => {
            cartHTML += `
              <div class="cart-item" id="CartItem-${index + 1}">
                <div class="cart-item__image">
                  <img src="${item.image}" alt="${item.title}">
                </div>
                <div class="cart-item__details">
                  <h3 class="cart-item__name">${item.title}</h3>
                  <p class="cart-item__variant">${item.variant_title}</p>
                  <div class="cart-item__qty-price">
                    <div class="quantity">
                      <button class="quantitybutton" name="minus" type="button">&minus;</button>
                      <input class="quantityinput"
                        type="number"
                        name="updates[]"
                        value="${item.quantity}"
                        min="0"
                        data-index="${index + 1}"
                        readonly
                      >
                      <button class="quantitybutton" name="plus" type="button">&plus;</button>
                    </div>
                    <p class="cart-item__price">${formatMoney(item.final_line_price)}</p>
                  </div>
                </div>
                <button class="cart-item__remove" data-index="{{ item.index | plus: 1 }}">
                  <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M5.5 2.5V2C5.5 1.44772 5.94772 1 6.5 1H9.5C10.0523 1 10.5 1.44772 10.5 2V2.5M2 2.5H14M12.5 2.5V13C12.5 13.5523 12.0523 14 11.5 14H4.5C3.94772 14 3.5 13.5523 3.5 13V2.5M6.5 6V10.5M9.5 6V10.5" stroke="currentColor" stroke-width="1.2" stroke-linecap="round" stroke-linejoin="round"/>
                  </svg>
                </button>
              </div>
            `;
          });
          cartItemsContainer.innerHTML = cartHTML;

          // Update subtotal
          const subtotalElement = document.querySelector('.cart-subtotal span:last-child');
          if (subtotalElement) {
            subtotalElement.textContent = formatMoney(cart.total_price);
          }

          // Update cart item count and show it
          const cartItemCount = document.getElementById('cart-item-count');
          if (cartItemCount) {
            cartItemCount.textContent = cart.item_count; // Set the item count
            cartItemCount.style.display = 'inline'; // Show item count when there are items in the cart
          }

          // Show cart footer
          const cartFooter = document.querySelector('.cart-footer');
          if (cartFooter) cartFooter.style.display = 'block';

          // Rebind events
          const cartDrawer = document.querySelector('cart-drawer');
          if (cartDrawer) {
            cartDrawer.bindQuantityButtons();
            cartDrawer.bindRemoveButtons();
          }
        }
      }
    });
}

function formatMoney(cents) {
  return (cents/100).toLocaleString('en-US', {
    style: 'currency',
    currency: 'USD'
  });
}
</script>
  <!-- Chatbot Widget -->
<div id="chatbot-container" class="chatbot-widget">
  <div id="chatbot-button" class="chat-button">
  <svg class="chat-icon" viewBox="0 0 24 24" width="24" height="24">
    <path fill="white" d="M20 2H4c-1.1 0-2 .9-2 2v18l4-4h14c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm0 14H6l-2 2V4h16v12z"/>
    <path fill="white" d="M7 9h10v2H7zm0-3h10v2H7zm0 6h7v2H7z"/>
  </svg>
</div>

<style>
.chat-button {
  width: 24px;  /* Made smaller to match icon size */
  height: 24px;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  transition: transform 0.2s;
}

.chat-button:hover {
  transform: translateY(-2px);
}

.chat-icon {
  width: 24px;
  height: 24px;
}

.chatbot-widget {
  position: fixed;
  bottom: 20px;
  right: 20px;
  z-index: 9999;
}
  .cart-drawer.active ~ .chatbot-widget {
  display: none !important;
}

.template-collection .cart-drawer.active ~ .chatbot-widget {
  display: none !important;
}

.chat-popup {
  position: fixed;
  bottom: 80px;
  right: 20px;
  width: 350px;
  height: 500px;
  background: white;
  border-radius: 10px;
  box-shadow: 0 5px 15px rgba(0,0,0,0.2);
  display: none;
}

@media (max-width: 480px) {
  .chat-popup {
    width: 90%;
    height: 70vh;
    right: 5%;
    bottom: 70px;
  }
}
</style>
  <div id="chatbot-popup" class="chat-popup" style="display: none;">
    <div class="chat-header">
      <span>Customer Support</span>
      <button onclick="closeChat()" class="close-button">&times;</button>
    </div>
    <div id="chat-messages"></div>
    <div id="input-container">
      <input type="text" id="user-input" placeholder="Ask about products, shipping, returns...">
      <button onclick="sendMessage()">Send</button>
    </div>
  </div>
</div>

<style>
.chatbot-widget {
  position: fixed;
  bottom: 20px;
  right: 20px;
  z-index: 9999;
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
}

.chat-button {
  background-color: #000000;
  color: white;
  padding: 15px 25px;
  border-radius: 25px;
  cursor: pointer;
  box-shadow: 0 2px 5px rgba(0,0,0,0.2);
  transition: transform 0.2s;
}

.chat-button:hover {
  transform: translateY(-2px);
}

.chat-popup {
  position: fixed;
  bottom: 80px;
  right: 20px;
  width: 350px;
  height: 500px;
  background: white;
  border-radius: 10px;
  box-shadow: 0 5px 15px rgba(0,0,0,0.2);
  display: flex;
  flex-direction: column;
}

.chat-header {
  padding: 15px;
  background-color: #000000;
  color: white;
  border-radius: 10px 10px 0 0;
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.close-button {
  background: none;
  border: none;
  color: white;
  font-size: 24px;
  cursor: pointer;
  padding: 0 5px;
}

#chat-messages {
  flex-grow: 1;
  overflow-y: auto;
  padding: 15px;
  display: flex;
  flex-direction: column;
  gap: 10px;
}

#input-container {
  padding: 15px;
  border-top: 1px solid #eee;
  display: flex;
  gap: 10px;
}

#user-input {
  flex-grow: 1;
  padding: 8px;
  border: 1px solid #ddd;
  border-radius: 4px;
  font-size: 14px;
}

#input-container button {
  padding: 8px 15px;
  background-color: #000000;
  color: white;
  border: none;
  border-radius: 4px;
  cursor: pointer;
}

.message {
  padding: 10px;
  border-radius: 8px;
  max-width: 80%;
  word-wrap: break-word;
}

.user-message {
  background-color: #000000;
  color: white;
  margin-left: auto;
}

.bot-message {
  background-color: #f0f0f0;
  margin-right: auto;
}

@media (max-width: 480px) {
  .chat-popup {
    width: 90%;
    height: 70vh;
    right: 5%;
    bottom: 70px;
  }
}
</style>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const chatButton = document.querySelector('.chat-button');
  const chatPopup = document.querySelector('.chat-popup');
  const chatMessages = document.getElementById('chat-messages');
  const userInput = document.getElementById('user-input');
  let isFirstMessage = true;

  chatButton.addEventListener('click', function() {
    chatPopup.style.display = 'flex';
    if (isFirstMessage) {
      addMessage("Welcome to Entrance USA! How can I help you today? I can assist with shipping, returns, orders, and product information.", 'bot');
      isFirstMessage = false;
    }
  });

  function closeChat() {
    chatPopup.style.display = 'none';
  }

  function addMessage(text, sender) {
    const messageDiv = document.createElement('div');
    messageDiv.className = `message ${sender}-message`;
    messageDiv.textContent = text;
    chatMessages.appendChild(messageDiv);
    chatMessages.scrollTop = chatMessages.scrollHeight;
  }

  async function sendMessage() {
    const message = userInput.value.trim();
    if (!message) return;

    addMessage(message, 'user');
    userInput.value = '';

    try {
      const response = await fetch('https://customer-service-bot-xjizzle20.replit.app/api/shopify-chat', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({ message: message })
      });

      const data = await response.json();
      addMessage(data.response, 'bot');
    } catch (error) {
      console.error('Error:', error);
      addMessage("Sorry, I'm having trouble connecting. Please email info@entranceusa.shop for assistance.", 'bot');
    }
  }

  userInput.addEventListener('keypress', function(e) {
    if (e.key === 'Enter') {
      sendMessage();
    }
  });

  window.closeChat = closeChat;
  window.sendMessage = sendMessage;
});
</script>
<script>
function toggleAccordionNew(button) {
  // Get parent accordion item
  const item = button.parentElement;

  // Get the panel
  const panel = item.querySelector('.accordion-panel');

  // Get all accordion items
  const allItems = document.querySelectorAll('.accordion-item');

  // Close all other panels
  allItems.forEach(otherItem => {
    if (otherItem !== item) {
      otherItem.classList.remove('active');
      otherItem.querySelector('.accordion-panel').style.display = 'none';
    }
  });

  // Toggle this panel
  if (item.classList.contains('active')) {
    item.classList.remove('active');
    panel.style.display = 'none';
  } else {
    item.classList.add('active');
    panel.style.display = 'block';
  }
}

// Initialize panels as closed
document.addEventListener('DOMContentLoaded', function() {
  document.querySelectorAll('.accordion-panel').forEach(panel => {
    panel.style.display = 'none';
  });
});
</script>
<script>
  document.addEventListener('DOMContentLoaded', function() {
    const footer = document.querySelector('.footer');
    if (footer) {
      footer.style.display = 'block';
      footer.style.visibility = 'visible';
      footer.style.opacity = '1';
    }
  });
</script>

<script>
document.addEventListener('DOMContentLoaded', function() {
  function initializeSwiper() {
    if (window.innerWidth <= 768) {
      const galleryMain = document.querySelector('.gallery-main');
      if (galleryMain && !galleryMain.classList.contains('swiper-initialized')) {
        // Store original content
        const originalContent = galleryMain.innerHTML;
        
        // Add swiper classes
        galleryMain.classList.add('swiper');
        
        // Create wrapper and move images
        const imageWrapper = document.createElement('div');
        imageWrapper.className = 'swiper-wrapper';
        
        // Get all gallery images and wrap them in slides
        const galleryImages = galleryMain.querySelectorAll('.gallery-image');
        galleryImages.forEach(image => {
          const slide = document.createElement('div');
          slide.className = 'swiper-slide';
          slide.appendChild(image.cloneNode(true));
          imageWrapper.appendChild(slide);
        });
        
        // Clear gallery and add new structure
        galleryMain.innerHTML = '';
        galleryMain.appendChild(imageWrapper);
        
        // Add pagination
        const pagination = document.createElement('div');
        pagination.className = 'swiper-pagination';
        galleryMain.appendChild(pagination);
        
        // Initialize Swiper
        new Swiper(galleryMain, {
          slidesPerView: 1,
          spaceBetween: 0,
          grabCursor: true,
          pagination: {
            el: '.swiper-pagination',
            clickable: true,
          }
        });
      }
    } else {
      // Revert to original layout for desktop
      const galleryMain = document.querySelector('.gallery-main');
      if (galleryMain && galleryMain.classList.contains('swiper-initialized')) {
        const swiper = galleryMain.swiper;
        if (swiper) {
          swiper.destroy(true, true);
        }
        galleryMain.classList.remove('swiper', 'swiper-initialized');
        
        // Restore original vertical scroll layout
        const slides = galleryMain.querySelectorAll('.swiper-slide');
        slides.forEach(slide => {
          const image = slide.querySelector('.gallery-image');
          if (image) {
            galleryMain.appendChild(image);
          }
        });
        
        // Remove swiper elements
        const wrapper = galleryMain.querySelector('.swiper-wrapper');
        const pagination = galleryMain.querySelector('.swiper-pagination');
        if (wrapper) wrapper.remove();
        if (pagination) pagination.remove();
      }
    }
  }

  // Initialize on load
  initializeSwiper();
  
  // Reinitialize on resize
  let resizeTimer;
  window.addEventListener('resize', function() {
    clearTimeout(resizeTimer);
    resizeTimer = setTimeout(initializeSwiper, 250);
  });
});
</script>
      <script src="https://c654f76d-68cc-47ff-9abd-3d69d3b54a25-00-2bk0eia9je9wp.picard.replit.dev/tracking.js?siteId=bU4yP94UJGe73VJY" async></script>
    </body>
</html>